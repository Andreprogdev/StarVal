-- Francisco : Update LPLIST_ALL base on resulta from A_0_091622
-- Francisco : NEEDS TO BE DETAILED 


--DROP PROCEDURE A_1_051822
CREATE PROCEDURE [dbo].[A_1_051822] @MAXCONTRIDATE DATE
       
AS

BEGIN

    BEGIN TRY

        -- Francisco : Step 1
        -- Francisco : Description - Inster into LPLIST_ALL
        -- Francisco : Sources - PROPERTY # TO UPADATE
            ----
            --DECLARE @MAXCONTRIDATE DATE SELECT @MAXCONTRIDATE=DATEFROMPARTS(2022,4,30)
            DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
            SELECT CONCAT('STEP#1:INSERT_LPLIST_ALL; IDENTIFY AND RECONCILE LOAN-PROPERTY DATA/RUNTIME(SEC)=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP

            -- Francisco : Step 1.1 - Insert PROPERTY into LPLIST_ALL
                --------------STEP#1 INSERT_LPLIST_ALL
                TRUNCATE TABLE LPLIST_ALL

                DECLARE @RUNTIME datetime2(7) 
                SELECT @RUNTIME=CURRENT_TIMESTAMP

                DECLARE @DASH NVARCHAR(10)
                SELECT @DASH='-'
            
                INSERT INTO LPLIST_ALL
                (EXID_PLID_PRID, EXA_PLID,IN_LPER,IN_PROPERTY,IN_FF,IN_EXHIBITA,NUM_PROPS,NUM_LOANS,
                EXATRANSACTIONID,PROSPECTUSLOANID,PROPERTYID)
                (SELECT DISTINCT concat(P.EXATRANSACTIONID,'_',P.PROSPECTUSLOANID,'_',P.PROPERTYID),concat(P.EXATRANSACTIONID,'_',P.PROSPECTUSLOANID),
                0,0,0,0,0,0,P.EXATRANSACTIONID,P.PROSPECTUSLOANID,P.PROPERTYID FROM PROPERTY P
                WHERE P.PROPERTYID IS NOT NULL AND P.PROSPECTUSLOANID IS NOT NULL AND P.LOANID IS NOT NULL AND
                P.PROPERTYADDRESS IS NOT NULL AND P.PROPERTYADDRESS<>@DASH AND P.PROPERTYCITY IS NOT NULL AND P.PROPERTYCITY<>@DASH AND P.PROPERTYSTATE IS NOT NULL 
                AND P.PROPERTYSTATE<>@DASH AND P.PROPERTYZIPCODE>=0
                AND (SELECT COUNT(DISTINCT ProspectusLoanId) FROM PROPERTY X WHERE X.LOANID=P.LOANID AND X.ExATransactionID=P.ExATransactionID AND X.PROPERTYID=P.PROPERTYID)<=1
                )
                --UNION
                --(SELECT DISTINCT concat(F.EXATRANSACTIONID,'_',F.PROSPECTUSLOANID,'_',F.PROPERTYID),concat(F.EXATRANSACTIONID,'_',F.PROSPECTUSLOANID),
                --0,0,0,0,0,0,F.EXATRANSACTIONID,F.PROSPECTUSLOANID,F.PROPERTYID FROM FF F
                --WHERE F.PROPERTYID IS NOT NULL AND F.PROSPECTUSLOANID IS NOT NULL AND F.LOANID IS NOT NULL AND F.StmtType='NOR' AND F.DataType='AN'
                --AND (SELECT COUNT(DISTINCT ProspectusLoanId) FROM FF X WHERE X.LOANID=F.LOANID AND X.ExATransactionID=F.ExATransactionID AND X.PROPERTYID=F.PROPERTYID)<=1
                --)
            -- Francisco : Step 1.2 - Insert LPER and EXHIBITA  into LPLIST_ALL
                INSERT INTO LPLIST_ALL
                (EXID_PLID_PRID, EXA_PLID,IN_LPER,IN_PROPERTY,IN_FF,IN_EXHIBITA,NUM_PROPS,NUM_LOANS,
                EXATRANSACTIONID,PROSPECTUSLOANID)
                (SELECT DISTINCT concat(L.EXATRANSACTIONID,'_',L.PROSPECTUSLOANID),concat(L.EXATRANSACTIONID,'_',L.PROSPECTUSLOANID),
                0,0,0,0,0,0,L.EXATRANSACTIONID,L.PROSPECTUSLOANID FROM LPER L WHERE L.LOANID IS NOT NULL AND L.PROSPECTUSLOANID IS NOT NULL
                AND (SELECT COUNT(DISTINCT ProspectusLoanId) FROM LPER X WHERE X.LOANID=L.LOANID AND X.ExATransactionID=L.ExATransactionID)<=1
                ) 
                UNION 
                (SELECT DISTINCT concat(E.EXATRANSACTIONID,'_',E.PROSPECTUSLOANID),concat(E.EXATRANSACTIONID,'_',E.PROSPECTUSLOANID),
                0,0,0,0,0,0,E.EXATRANSACTIONID,E.PROSPECTUSLOANID FROM EXHIBITA E
                WHERE E.PROSPECTUSLOANID IS NOT NULL AND E.PROPERTYADDRESS IS NOT NULL AND E.PROPERTYADDRESS<>@DASH AND E.PROPERTYCITY IS NOT NULL AND E.PROPERTYCITY<>@DASH AND E.PROPERTYSTATE IS NOT NULL 
                AND E.PROPERTYSTATE<>@DASH AND E.PROPERTYZIPCODE>=0 AND E.NUMBEROFPROPERTIES=1
                ) 

        -- ==============================
        -- Francisco : Step 2
        -- Francisco : Description - Upadate LPLIST_ALL
        -- Francisco : Sources - PROPERTY, FF, LPER, EXHIBITA, INTCONVERT
        -- =============
        -- Francisco : Step 2.1
            UPDATE LPLIST_ALL SET IN_PROPERTY=0
            UPDATE LPLIST_ALL SET IN_PROPERTY= CASE WHEN (SELECT COUNT(*) FROM PROPERTY P WHERE LPLIST_ALL.ExATransactionID = P.EXATRANSACTIONID
            AND LPLIST_ALL.ProspectusLoanId=P.PROSPECTUSLOANID
            AND P.PROPERTYID IS NOT NULL AND P.LOANID IS NOT NULL AND
            P.PROPERTYADDRESS IS NOT NULL AND P.PROPERTYADDRESS<>@DASH AND P.PROPERTYCITY IS NOT NULL AND P.PROPERTYCITY<>@DASH AND P.PROPERTYSTATE IS NOT NULL 
            AND P.PROPERTYSTATE<>@DASH AND P.PROPERTYZIPCODE>=0)>0 THEN 1 ELSE 0 END

            UPDATE LPLIST_ALL SET IN_FF=0
            UPDATE LPLIST_ALL SET IN_FF= CASE WHEN (SELECT COUNT(*) FROM FF F 
            WHERE LPLIST_ALL.ExATransactionID = F.EXATRANSACTIONID AND LPLIST_ALL.ProspectusLoanId=F.PROSPECTUSLOANID AND F.PROPERTYID IS NOT NULL AND F.LOANID IS NOT NULL 
            AND F.StmtType='NOR' AND F.DataType='AN')>0 THEN 1 ELSE 0 END

            UPDATE LPLIST_ALL SET IN_LPER=0
            UPDATE LPLIST_ALL SET IN_LPER= CASE WHEN (SELECT COUNT(*) FROM LPER L WHERE LPLIST_ALL.ExATransactionID = L.EXATRANSACTIONID
            AND LPLIST_ALL.ProspectusLoanId=L.PROSPECTUSLOANID AND L.LOANID IS NOT NULL)>0 THEN 1 ELSE 0 END

            UPDATE LPLIST_ALL SET IN_EXHIBITA=0
            UPDATE LPLIST_ALL SET IN_EXHIBITA= CASE WHEN (SELECT COUNT(*) FROM EXHIBITA E WHERE LPLIST_ALL.ExATransactionID = E.EXATRANSACTIONID
            AND LPLIST_ALL.ProspectusLoanId=E.PROSPECTUSLOANID
            AND E.PROPERTYADDRESS IS NOT NULL AND E.PROPERTYADDRESS<>@DASH AND E.PROPERTYCITY IS NOT NULL AND E.PROPERTYCITY<>@DASH AND E.PROPERTYSTATE IS NOT NULL 
            AND E.PROPERTYSTATE<>@DASH AND E.PROPERTYZIPCODE>=0 AND E.NUMBEROFPROPERTIES=1)>0 THEN 1 ELSE 0 END
        -- =============
        -- Francisco : Step 2.2
            DELETE FROM LPLIST_ALL WHERE EXATRANSACTIONID IS NULL OR PROSPECTUSLOANID IS NULL
            UPDATE LPLIST_ALL SET EXA_PLID=CONCAT(EXATRANSACTIONID,'_',PROSPECTUSLOANID)
            DELETE FROM LPLIST_ALL WHERE (IN_PROPERTY=1 OR IN_FF=1) AND PROPERTYID IS NULL

        -- =============
        -- Francisco : Step 2.3
            --DECLARE @DASH NVARCHAR(10) SELECT @DASH='-'
            --UPDATE LPLIST_ALL fields in order of priority
            UPDATE LPLIST_ALL SET
            NUMBEROFPROPERTIES=X.NUMBEROFPROPERTIES,
            PROPERTYNAME=X.PROPERTYNAME,
            PROPERTYORIGINATOR=X.PROPERTYORIGINATOR,
            PROPERTYADDRESS=X.PROPERTYADDRESS,
            PROPERTYCITY=X.PROPERTYCITY,
            PROPERTYSTATE=X.PROPERTYSTATE,
            PROPERTYZIPCODE=X.PROPERTYZIPCODE,
            PROPERTYCOUNTY=X.PROPERTYCOUNTY,
            PROPERTYTYPE=X.PROPERTYTYPE,
            PROPERTYSUBTYPE=X.PROPERTYSUBTYPE,
            YEARBUILT=X.YEARBUILT,
            YEARLASTRENOVATED=X.YEARLASTRENOVATED,
            CURRENTNUMBEROFUNITSBEDSROOMS=X.CURRENTNUMBEROFUNITSBEDSROOMS,
            UNITOFMEASURE=X.UNITOFMEASURE,

            LOWINCOMEUNITS=(SELECT INTINT FROM INTCONVERT WHERE INTCHAR=X.LOWINCOMEUNITS),
            VERYLOWINCOMEUNITS=(SELECT INTINT FROM INTCONVERT WHERE INTCHAR=X.VERYLOWINCOMEUNITS),

            PHYSICALOCCUPANCYATCONTRIBUTION=X.PHYSICALOCCUPANCYATCONTRIBUTION,
            LOANPURPOSE=X.LOANPURPOSE,
            SPECIALPURPOSEENTITYYN=X.SPECIALPURPOSEENTITYYN,
            TOTALLOANAMOUNTATORIGINATION=X.TOTALLOANAMOUNTATORIGINATION,
            TOTALLOANAMOUNTATCONTRIBUTION=X.TOTALLOANAMOUNTATCONTRIBUTION,
            PERCENTAGEOFPOOLATORIGINATION=X.PERCENTAGEOFPOOLATORIGINATION,
            SCHEDULEDLOANBALANCEATMATURITY=X.SCHEDULEDLOANBALANCEATMATURITY,
            GROSSRATEATCONTRIBUTION=X.GROSSRATEATCONTRIBUTION,
            LOANADMINFEE=X.LOANADMINFEE,
            NETRATEATCONTRIBUTION=X.NETRATEATCONTRIBUTION,
            LOANACCRUALTYPE=X.LOANACCRUALTYPE,
            LOANAMORTTYPE=X.LOANAMORTTYPE,
            LOANAMORTTERM=X.LOANAMORTTERM,
            LOANORIGTERM=X.LOANORIGTERM,
            LOANIOPER=X.LOANIOPER,
            LOANSEAS=X.LOANSEAS,
            LOANPREPAYPROVISION=X.LOANPREPAYPROVISION,
            VALUATIONAMOUNTATCONTRIBUTION=X.VALUATIONAMOUNTATCONTRIBUTION,
            CUTOFFDATELTV=X.CUTOFFDATELTV,
            MATURITYLTV=X.MATURITYLTV,
            UWNCFDSCRAMORTIZING=X.UWNCFDSCRAMORTIZING,
            UWNCFDSCRIO=X.UWNCFDSCRIO,
            UWREVENUE=X.UWREVENUE,
            UWOPERATINGEXPENSES=X.UWOPERATINGEXPENSES,
            UWNOI=X.UWNOI,
            UWNCF=X.UWNCF,
            REVENUEATCONTRIBUTION=X.REVENUEATCONTRIBUTION,
            OPERATINGEXPENSESATCONTRIBUTION=X.OPERATINGEXPENSESATCONTRIBUTION,
            NOIATCONTRIBUTION=X.NOIATCONTRIBUTION,
            NCFATCONTRIBUTION=X.NCFATCONTRIBUTION,
            SECONDMOSTRECENTEGI=X.SECONDMOSTRECENTEGI,
            SECONDMOSTRECENTEXPENSES=X.SECONDMOSTRECENTEXPENSES,
            SECONDMOSTRECENTNOI=X.SECONDMOSTRECENTNOI,
            SECONDMOSTRECENTNCF=X.SECONDMOSTRECENTNCF,
            THIRDMOSTRECENTEGI=X.THIRDMOSTRECENTEGI,
            THIRDMOSTRECENTEXPENSES=X.THIRDMOSTRECENTEXPENSES,
            THIRDMOSTRECENTNOI=X.THIRDMOSTRECENTNOI,
            THIRDMOSTRECENTNCF=X.THIRDMOSTRECENTNCF,
            LIENPOSITION=X.LIENPOSITION,
            TITLEVESTINGFEELEASEHOLDBOTH=X.TITLEVESTINGFEELEASEHOLDBOTH,
            TYPEOFLOCKBOX=X.TYPEOFLOCKBOX,
            ENGINEERINGESCROWDEFERREDMAINTENANCE=X.ENGINEERINGESCROWDEFERREDMAINTENANCE,
            TAXESCROWINITIAL=X.TAXESCROWINITIAL,
            TAXESCROWMONTHLY=X.TAXESCROWMONTHLY,
            INSURANCEESCROWINITIAL=X.INSURANCEESCROWINITIAL,
            INSURANCEESCROWMONTHLY=X.INSURANCEESCROWMONTHLY,
            REPLACEMENTRESERVEINITIAL=X.REPLACEMENTRESERVEINITIAL,
            REPLACEMENTRESERVEMONTHLY=X.REPLACEMENTRESERVEMONTHLY,
            REPLACEMENTRESERVECONTRACTUALCAP=X.REPLACEMENTRESERVECONTRACTUALCAP,
            TILCRESERVEINITIAL=X.TILCRESERVEINITIAL,
            TILCRESERVEMONTHLY=X.TILCRESERVEMONTHLY,
            ENVIRONMENTALESCROW=X.ENVIRONMENTALESCROW,
            OTHERESCROWINITIAL=X.OTHERESCROWINITIAL,
            OTHERESCROWMONTHLY=X.OTHERESCROWMONTHLY,
            OTHERESCROWRESERVEDESCRIPTION=X.OTHERESCROWRESERVEDESCRIPTION,
            SPRINGINGRESERVETYPE=X.SPRINGINGRESERVETYPE,
            SPRINGINGRESERVEAMOUNT=X.SPRINGINGRESERVEAMOUNT,
            SEISMICINSURANCEIFPMLGREATER20PCTYN=X.SEISMICINSURANCEIFPMLGREATER20PCTYN,
            UWRENTPERUNIT=X.UWRENTPERUNIT,

            ELEVATORSYN=CASE WHEN UPPER(TRIM(X.ELEVATORSYN))='Y' OR UPPER(TRIM(X.ELEVATORSYN))='YES' THEN 'Y'
                        ELSE CASE WHEN UPPER(TRIM(X.ELEVATORSYN))='N' OR UPPER(TRIM(X.ELEVATORSYN))='NO' THEN 'N' END END,


            SECONDARYFINANCINGINPLACEEXISTINGYN=X.SECONDARYFINANCINGINPLACEEXISTINGYN,
            SECONDARYFINANCINGAMOUNTEXISTING=X.SECONDARYFINANCINGAMOUNTEXISTING,
            SECONDARYFINANCINGDESCRIPTIONEXISTING=X.SECONDARYFINANCINGDESCRIPTIONEXISTING,
            FUTURESUPPLEMENTALFINANCINGYN=X.FUTURESUPPLEMENTALFINANCINGYN,
            FUTURESUPPLEMENTALFINANCINGDESCRIPTION=X.FUTURESUPPLEMENTALFINANCINGDESCRIPTION,
            FUTURESUPPLEMENTALFINANCINGDESCRIPTIONCONTINUED=X.FUTURESUPPLEMENTALFINANCINGDESCRIPTIONCONTINUED,
            LOANRATEINDEX=X.LOANRATEINDEX,
            LOANRATEMARGIN=X.LOANRATEMARGIN,
            RATECAPLIFETIME=X.RATECAPLIFETIME,
            RATECAPYESORNO=X.RATECAPYESORNO,
            RATECAPSTRIKE=X.RATECAPSTRIKE,
            MONTHLYDEBTSERVICEATCAP=X.MONTHLYDEBTSERVICEATCAP,
            MONTHLYDEBTSERVICEAMORTIZING=X.MONTHLYDEBTSERVICEAMORTIZING,
            MONTHLYDEBTSERVICEIO=X.MONTHLYDEBTSERVICEIO

            FROM EXHIBITA X
            WHERE X.EXA_PLID = LPLIST_ALL.EXA_PLID AND LPLIST_ALL.IN_EXHIBITA=1
            AND X.PROPERTYADDRESS IS NOT NULL AND X.PROPERTYADDRESS<>@DASH AND X.PROPERTYCITY IS NOT NULL AND X.PROPERTYCITY<>@DASH AND X.PROPERTYSTATE IS NOT NULL 
            AND X.PROPERTYSTATE<>@DASH AND X.PROPERTYZIPCODE>=0 AND X.NUMBEROFPROPERTIES=1
        -- =============
        -- Francisco : Step 2.4
            --CHANGE TO WHEN NULL
            UPDATE LPLIST_ALL SET OCCUPANCYDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.OCCUPANCYDATE AND X.OCCUPANCYDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID) WHERE OCCUPANCYDATE IS NULL OR OCCUPANCYDATE>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET ORIGINATIONDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.ORIGINATIONDATE AND X.ORIGINATIONDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID) WHERE ORIGINATIONDATE IS NULL OR ORIGINATIONDATE>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET MATURITYDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.MATURITYDATE AND X.MATURITYDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE MATURITYDATE IS NULL
            UPDATE LPLIST_ALL SET VALUATIONDATEATCONTRIBUTION=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.VALUATIONDATEATCONTRIBUTION AND X.VALUATIONDATEATCONTRIBUTION>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE VALUATIONDATEATCONTRIBUTION IS NULL  OR VALUATIONDATEATCONTRIBUTION>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET CONTRIBUTIONFINANCIALSASOFDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.CONTRIBUTIONFINANCIALSASOFDATE AND X.CONTRIBUTIONFINANCIALSASOFDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE CONTRIBUTIONFINANCIALSASOFDATE IS NULL  OR CONTRIBUTIONFINANCIALSASOFDATE>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET SECONDMOSTRECENTFINANCIALENDDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.SECONDMOSTRECENTFINANCIALENDDATE AND X.SECONDMOSTRECENTFINANCIALENDDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE SECONDMOSTRECENTFINANCIALENDDATE IS NULL  OR SECONDMOSTRECENTFINANCIALENDDATE>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET THIRDMOSTRECENTFINANCIALENDDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.THIRDMOSTRECENTFINANCIALENDDATE AND X.THIRDMOSTRECENTFINANCIALENDDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE THIRDMOSTRECENTFINANCIALENDDATE IS NULL  OR THIRDMOSTRECENTFINANCIALENDDATE>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET GROUNDLEASEMATURITYDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.GROUNDLEASEMATURITYDATE AND X.GROUNDLEASEMATURITYDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE GROUNDLEASEMATURITYDATE IS NULL
            UPDATE LPLIST_ALL SET RATECAPEXPIRATIONDATE=(SELECT DateDate FROM DATECONVERT D, EXHIBITA X WHERE D.DateLong=X.RATECAPEXPIRATIONDATE AND X.RATECAPEXPIRATIONDATE>100000 AND X.EXA_PLID=LPLIST_ALL.EXA_PLID)  WHERE RATECAPEXPIRATIONDATE IS NULL
        -- =============
        -- Francisco : Step 2.5
            UPDATE LPLIST_ALL SET OCCUPANCYDATE=NULL WHERE YEAR(OCCUPANCYDATE)<2000 OR OCCUPANCYDATE>@MAXCONTRIDATE 
            UPDATE LPLIST_ALL SET ORIGINATIONDATE=NULL WHERE YEAR(ORIGINATIONDATE)<2000 OR ORIGINATIONDATE>@MAXCONTRIDATE 
            UPDATE LPLIST_ALL SET VALUATIONDATEATCONTRIBUTION=NULL WHERE YEAR(VALUATIONDATEATCONTRIBUTION)<2000 OR VALUATIONDATEATCONTRIBUTION>@MAXCONTRIDATE 
            UPDATE LPLIST_ALL SET CONTRIBUTIONFINANCIALSASOFDATE=NULL WHERE YEAR(CONTRIBUTIONFINANCIALSASOFDATE)<2000 OR CONTRIBUTIONFINANCIALSASOFDATE>@MAXCONTRIDATE 
            UPDATE LPLIST_ALL SET SECONDMOSTRECENTFINANCIALENDDATE=NULL WHERE YEAR(SECONDMOSTRECENTFINANCIALENDDATE)<2000 OR SECONDMOSTRECENTFINANCIALENDDATE>@MAXCONTRIDATE 
            UPDATE LPLIST_ALL SET THIRDMOSTRECENTFINANCIALENDDATE=NULL WHERE YEAR(THIRDMOSTRECENTFINANCIALENDDATE)<2000 OR THIRDMOSTRECENTFINANCIALENDDATE>@MAXCONTRIDATE
            UPDATE LPLIST_ALL SET GROUNDLEASEMATURITYDATE=NULL WHERE YEAR(GROUNDLEASEMATURITYDATE)<2000
            UPDATE LPLIST_ALL SET RATECAPEXPIRATIONDATE=NULL WHERE YEAR(RATECAPEXPIRATIONDATE)<2000
        -- =============
        -- Francisco : Step 2.6
            ---LPER ... GO FIRST
            UPDATE LPLIST_ALL SET LPER_MaxDistributionDateLONG=(SELECT MAX(DistributionDate) FROM LPER L WHERE LPLIST_ALL.ExATransactionID = L.EXATRANSACTIONID
            AND LPLIST_ALL.ProspectusLoanId=L.PROSPECTUSLOANID AND DistributionDate>100000)

            UPDATE LPLIST_ALL SET LPER_MinDistributionDateLONG=(SELECT MIN(DistributionDate) FROM LPER L WHERE LPLIST_ALL.ExATransactionID = L.EXATRANSACTIONID
            AND LPLIST_ALL.ProspectusLoanId=L.PROSPECTUSLOANID AND DistributionDate>100000)

            UPDATE LPLIST_ALL SET LID_DD_Max=(SELECT LID_DD FROM LPER L WHERE LPLIST_ALL.LPER_MaxDistributionDateLONG=L.DistributionDate
            AND LPLIST_ALL.LOANID=L.LoanId)

            UPDATE LPLIST_ALL SET LID_DD_Min=(SELECT LID_DD FROM LPER L WHERE LPLIST_ALL.LPER_MinDistributionDateLONG=L.DistributionDate
            AND LPLIST_ALL.LOANID=L.LoanId)

            UPDATE LPLIST_ALL SET LPER_MaxDistributionDate=(SELECT MAX(DateDate) FROM DATECONVERT WHERE LPER_MaxDistributionDateLONG=DateLong)
            UPDATE LPLIST_ALL SET LPER_MinDistributionDate=(SELECT MIN(DateDate) FROM DATECONVERT WHERE LPER_MinDistributionDateLONG=DateLong)

            UPDATE LPLIST_ALL SET
            LOANID=X.LOANID,
            GROUPID=X.GROUPID,
            CURRENTBEGINNINGSCHEDBAL=X.CURRENTBEGINNINGSCHEDBAL,
            CURRENTENDINGSCHEDBAL=X.CURRENTENDINGSCHEDBAL,
            CURRENTINDEXRATE=X.CURRENTINDEXRATE,
            --DO NOT BLANK
            --CURRENTNOTERATE=X.CURRENTNOTERATE,
            SERVICERANDTRUSTEEFEERATE=X.SERVICERANDTRUSTEEFEERATE,
            FEERATESTRIPRATE1=X.FEERATESTRIPRATE1,
            FEERATESTRIPRATE2=X.FEERATESTRIPRATE2,
            FEERATESTRIPRATE3=X.FEERATESTRIPRATE3,
            FEERATESTRIPRATE4=X.FEERATESTRIPRATE4,
            FEERATESTRIPRATE5=X.FEERATESTRIPRATE5,
            NETRATE=X.NETRATE,
            NEXTINDEXRATE=X.NEXTINDEXRATE,
            NEXTNOTERATE=X.NEXTNOTERATE,
            SCHEDULEDINTERESTAMOUNT=X.SCHEDULEDINTERESTAMOUNT,
            SCHEDULEDPRINCIPALAMOUNT=X.SCHEDULEDPRINCIPALAMOUNT,
            TOTALSCHEDULEDPANDIDUE=X.TOTALSCHEDULEDPANDIDUE,
            NEGAMORTDEFERREDINTCAPAMT=X.NEGAMORTDEFERREDINTCAPAMT,
            UNSCHEDULEDPRINCIPALCOLL=X.UNSCHEDULEDPRINCIPALCOLL,
            OTHERPRINCIPALADJUSTMENTS=X.OTHERPRINCIPALADJUSTMENTS,
            PREPAYMENTPREMIUMYMRECEIVED=X.PREPAYMENTPREMIUMYMRECEIVED,
            PREPAYMENTINTERESTEXCESSSHORTFALL=X.PREPAYMENTINTERESTEXCESSSHORTFALL,
            LIQUIDATIONPREPAYMENTCODE=X.LIQUIDATIONPREPAYMENTCODE,
            MOSTRECENTNETASERAMOUNT=X.MOSTRECENTNETASERAMOUNT,
            CUMULATIVEASERAMOUNT=X.CUMULATIVEASERAMOUNT,
            ACTUALBALANCE=X.ACTUALBALANCE,
            TOTALPANDIADVANCEOUTSTANDING=X.TOTALPANDIADVANCEOUTSTANDING,
            TOTALTANDIADVANCEOUTSTANDING=X.TOTALTANDIADVANCEOUTSTANDING,
            OTHEREXPENSEADVANCEOUTSTANDING=X.OTHEREXPENSEADVANCEOUTSTANDING,
            PAYMENTSTATUSOFLOANFKASTATUSOFLOAN=X.PAYMENTSTATUSOFLOANFKASTATUSOFLOAN,
            INBANKRUPTCYYN=X.INBANKRUPTCYYN,
            NETPROCEEDSRECEIVEDONLIQUIDATION=X.NETPROCEEDSRECEIVEDONLIQUIDATION,
            LIQUIDATIONEXPENSE=X.LIQUIDATIONEXPENSE,
            REALIZEDLOSSTOTRUST=X.REALIZEDLOSSTOTRUST,
            MODIFICATIONCODE=X.MODIFICATIONCODE,
            MODIFIEDNOTERATE=X.MODIFIEDNOTERATE,
            MODIFIEDPAYMENTAMOUNT=X.MODIFIEDPAYMENTAMOUNT,
            PRECEDINGFYREVENUE=X.PRECEDINGFYREVENUE,
            PRECEDINGFYOPERATINGEXP=X.PRECEDINGFYOPERATINGEXP,
            PRECEDINGFYDEBTSVCAMOUNT=X.PRECEDINGFYDEBTSVCAMOUNT,
            PRECEDINGFYPHYSICALOCC=X.PRECEDINGFYPHYSICALOCC,
            SECONDPRECEDINGFYREVENUE=X.SECONDPRECEDINGFYREVENUE,
            SECONDPRECEDINGFYOPEXP=X.SECONDPRECEDINGFYOPEXP,
            SECONDPRECEDINGFYNOI=X.SECONDPRECEDINGFYNOI,
            SECONDPRECFYDEBTSERVAMT=X.SECONDPRECFYDEBTSERVAMT,
            SECONDPRECEDINGFYDSCRNOI=X.SECONDPRECEDINGFYDSCRNOI,
            SECONDPRECEDINGFYPHYOCC=X.SECONDPRECEDINGFYPHYOCC,
            MOSTRECENTDEBTSERVAMT=X.MOSTRECENTDEBTSERVAMT,
            MOSTRECENTPHYSICALOCC=X.MOSTRECENTPHYSICALOCC,
            WORKOUTSTRATEGY=X.WORKOUTSTRATEGY,
            MOSTRECENTFININDICATOR=X.MOSTRECENTFININDICATOR,
            NUMBEROFPROPERTIES=X.NUMBEROFPROPERTIES,
            PRECEDINGFYDSCRINDICATOR=X.PRECEDINGFYDSCRINDICATOR,
            SECONDPRECEDINGFYDSCRIND=X.SECONDPRECEDINGFYDSCRIND,
            MOSTRECENTDSCRINDICATOR=X.MOSTRECENTDSCRINDICATOR,
            PRECEDINGFYDSCRNCF=X.PRECEDINGFYDSCRNCF,
            DEFEASANCESTATUS=X.DEFEASANCESTATUS,
            ARAAPPRAISALREDUCTIONAMOUNT=X.ARAAPPRAISALREDUCTIONAMOUNT,
            OTHERINTERESTADJUSTMENT=X.OTHERINTERESTADJUSTMENT,
            CUMLACCRUNPAIDADVINTEREST=X.CUMLACCRUNPAIDADVINTEREST,
            TOTALRESERVEBALANCE=X.TOTALRESERVEBALANCE,
            SPECIALSERVFEEAMTPLUSADJ=X.SPECIALSERVFEEAMTPLUSADJ,
            REIMBURSEDINTERESTONADV=X.REIMBURSEDINTERESTONADV,
            WORKOUTFEEAMOUNT=X.WORKOUTFEEAMOUNT,
            LIQUIDATIONFEEAMOUNT=X.LIQUIDATIONFEEAMOUNT,
            NONRECOVERABILITYDETERMINED=X.NONRECOVERABILITYDETERMINED,
            --TOTALLOANAMOUNTATORIGINATION=X.TOTALLOANAMOUNTATORIGINATION,
            CURRENTLOCKBOXSTATUS=X.CURRENTLOCKBOXSTATUS,
            LIQUIDATIONSALESPRICE=X.LIQUIDATIONSALESPRICE,
            AMOUNTSDUESERVANDTRUSTEE=X.AMOUNTSDUESERVANDTRUSTEE,
            AMTSHELDBACKFUTUREPAYMENT=X.AMTSHELDBACKFUTUREPAYMENT,
            ACCRUEDINTEREST=X.ACCRUEDINTEREST,
            ADDITIONALTRUSTFUNDEXPENSE=X.ADDITIONALTRUSTFUNDEXPENSE,
            CURRENTPERIODADJUSTMENTTOLOANPRINCIPAL=X.CURRENTPERIODADJUSTMENTTOLOANPRINCIPAL,
            CUMULATIVEADJUSTMENTSTOLOAN=X.CUMULATIVEADJUSTMENTSTOLOAN,
            REIMBOFADVTOSERVCURMTH=X.REIMBOFADVTOSERVCURMTH,
            REIMBOFADVTOSERVLEFT=X.REIMBOFADVTOSERVLEFT,
            OTHERSHORTFALLSREFUNDS=X.OTHERSHORTFALLSREFUNDS,
            DEFERREDINTERESTCUMULATIVE=X.DEFERREDINTERESTCUMULATIVE,
            DEFERREDINTERESTCOLLECTED=X.DEFERREDINTERESTCOLLECTED,
            REASONFORSSTRANSFER=X.REASONFORSSTRANSFER,
            REIMBOFADVTOSERVCUMNOTYETREIMB=X.REIMBOFADVTOSERVCUMNOTYETREIMB,
            NONCASHPRINCIPALADJ=X.NONCASHPRINCIPALADJ,
            CURPERIODADJTOLOANOTHR=X.CURPERIODADJTOLOANOTHR,
            MASTERSERVICER=X.MASTERSERVICER,
            SPECIALSERVICER=X.SPECIALSERVICER

            FROM LPER X
            WHERE X.LID_DD = LPLIST_ALL.LID_DD_max AND LPLIST_ALL.IN_PROPERTY=1

            --APPLY TO EXHIBIT TO USE IN PLACE OF LPER WHEN LPER IS NULL
            UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATORIGINATION=(SELECT MAX(TOTALLOANAMOUNTATORIGINATION) FROM LPER X WHERE X.LOANID = LPLIST_ALL.LOANID) WHERE TOTALLOANAMOUNTATORIGINATION IS NULL
                    AND (SELECT MAX(TOTALLOANAMOUNTATORIGINATION) FROM LPER X WHERE X.LOANID = LPLIST_ALL.LOANID)>(SELECT MAX(CURRENTBEGINNINGSCHEDBAL) FROM LPER X WHERE X.LOANID = LPLIST_ALL.LOANID)
            UPDATE LPLIST_ALL SET CURRENTNOTERATE=(SELECT CURRENTNOTERATE FROM LPER X WHERE X.LID_DD = LPLIST_ALL.LID_DD_max AND LPLIST_ALL.IN_LPER=1) WHERE CURRENTNOTERATE IS NULL
            UPDATE LPLIST_ALL SET LOANRATEMARGIN=(SELECT (CURRENTNOTERATE-CURRENTINDEXRATE) FROM LPER X WHERE X.LID_DD = LPLIST_ALL.LID_DD_max AND LPLIST_ALL.IN_LPER=1) WHERE LOANRATEMARGIN IS NULL
            ---
            UPDATE LPLIST_ALL SET MATURITYDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE X.LOANID = LPLIST_ALL.LOANID AND D.DateLong=X.MATURITYDATE AND X.MATURITYDATE>100000) WHERE MATURITYDATE IS NULL
            UPDATE LPLIST_ALL SET NEXTRATEADJUSTMENTDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.NEXTRATEADJUSTMENTDATE AND X.NEXTRATEADJUSTMENTDATE>100000 AND X.LID_DD=LPLIST_ALL.LID_DD_max) WHERE NEXTRATEADJUSTMENTDATE IS NULL
            UPDATE LPLIST_ALL SET NEXTPAYMENTADJUSTMENTDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.NEXTPAYMENTADJUSTMENTDATE AND X.NEXTPAYMENTADJUSTMENTDATE>100000 AND X.LOANID = LPLIST_ALL.LOANID) WHERE NEXTPAYMENTADJUSTMENTDATE IS NULL
            UPDATE LPLIST_ALL SET LIQUIDATIONPREPAYMENTDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.LIQUIDATIONPREPAYMENTDATE AND X.LIQUIDATIONPREPAYMENTDATE>100000 AND X.LOANID = LPLIST_ALL.LOANID) WHERE LIQUIDATIONPREPAYMENTDATE IS NULL
            UPDATE LPLIST_ALL SET BANKRUPTCYDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.BANKRUPTCYDATE AND X.BANKRUPTCYDATE>100000 AND X.LOANID = LPLIST_ALL.LOANID) WHERE BANKRUPTCYDATE IS NULL
            UPDATE LPLIST_ALL SET PAIDTHROUGHDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.PAIDTHROUGHDATE AND X.PAIDTHROUGHDATE>100000 AND X.LOANID = LPLIST_ALL.LOANID) WHERE PAIDTHROUGHDATE IS NULL
            UPDATE LPLIST_ALL SET MODIFICATIONEXECDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.MODIFICATIONEXECDATE AND X.MODIFICATIONEXECDATE>100000 AND X.LOANID = LPLIST_ALL.LOANID) WHERE MODIFICATIONEXECDATE IS NULL
            UPDATE LPLIST_ALL SET MODIFICATIONBOOKINGDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.MODIFICATIONBOOKINGDATE AND X.MODIFICATIONBOOKINGDATE>100000 AND X.LOANID = LPLIST_ALL.LOANID) WHERE MODIFICATIONBOOKINGDATE IS NULL
            UPDATE LPLIST_ALL SET DATEOFCURRENTPERIODADJUSTMENTTOLOAN=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.DateLong=X.DATEOFCURRENTPERIODADJUSTMENTTOLOAN AND X.DATEOFCURRENTPERIODADJUSTMENTTOLOAN>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE MATURITYDATE IS NULL
            UPDATE LPLIST_ALL SET CLOSINGDTORIGDOCPERMEXT=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.CLOSINGDTORIGDOCPERMEXT AND X.CLOSINGDTORIGDOCPERMEXT>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE CLOSINGDTORIGDOCPERMEXT IS NULL
            UPDATE LPLIST_ALL SET DATEADDEDTOSERVWATCHLIST=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.DATEADDEDTOSERVWATCHLIST AND  X.DATEADDEDTOSERVWATCHLIST>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE DATEADDEDTOSERVWATCHLIST IS NULL
            UPDATE LPLIST_ALL SET ARADATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.ARADATE AND X.ARADATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE ARADATE IS NULL
            UPDATE LPLIST_ALL SET DATEOFASSUMPTION=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.DATEOFASSUMPTION AND X.DATEOFASSUMPTION>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE DATEOFASSUMPTION IS NULL
            UPDATE LPLIST_ALL SET LASTSETUPCHANGEDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.LASTSETUPCHANGEDATE AND X.LASTSETUPCHANGEDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID)  WHERE LASTSETUPCHANGEDATE IS NULL
            UPDATE LPLIST_ALL SET LASTLOANCONTDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.LASTLOANCONTDATE AND X.LASTLOANCONTDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE LASTLOANCONTDATE IS NULL
            UPDATE LPLIST_ALL SET LASTPROPERTYCONTDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.LASTPROPERTYCONTDATE AND X.LASTPROPERTYCONTDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE LASTPROPERTYCONTDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTSPECIALSERVICERTRANSFERDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.MOSTRECENTSPECIALSERVICERTRANSFERDATE AND X.MOSTRECENTSPECIALSERVICERTRANSFERDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE MOSTRECENTSPECIALSERVICERTRANSFERDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTMASTERSERVICERRETURNDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.MOSTRECENTMASTERSERVICERRETURNDATE AND X.MOSTRECENTMASTERSERVICERRETURNDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE MOSTRECENTMASTERSERVICERRETURNDATE IS NULL
            UPDATE LPLIST_ALL SET CURRENTHYPERAMORTIZINGDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.CURRENTHYPERAMORTIZINGDATE AND X.CURRENTHYPERAMORTIZINGDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE CURRENTHYPERAMORTIZINGDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTFINASOFSTDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.MOSTRECENTFINASOFSTDATE AND X.MOSTRECENTFINASOFSTDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE MOSTRECENTFINASOFSTDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTFINASOFENDDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.MOSTRECENTFINASOFENDDATE AND X.MOSTRECENTFINASOFENDDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE MOSTRECENTFINASOFENDDATE IS NULL
            UPDATE LPLIST_ALL SET SECONDPRECFYFINASOFDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.SECONDPRECFYFINASOFDATE AND X.SECONDPRECFYFINASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE SECONDPRECFYFINASOFDATE IS NULL
            UPDATE LPLIST_ALL SET PRECEDINGFYFINASOFDATE=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.PRECEDINGFYFINASOFDATE AND X.PRECEDINGFYFINASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE PRECEDINGFYFINASOFDATE IS NULL
            UPDATE LPLIST_ALL SET DATEOFLASTMODIFICATION=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.DATEOFLASTMODIFICATION AND X.DATEOFLASTMODIFICATION>100000 AND X.LOANID=LPLIST_ALL.LOANID) WHERE DATEOFLASTMODIFICATION IS NULL
            UPDATE LPLIST_ALL SET SECONDPRECFYFINASOFDATE_min=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.SECONDPRECFYFINASOFDATE AND X.SECONDPRECFYFINASOFDATE>100000 AND X.LID_DD=LPLIST_ALL.LID_DD_min)
            UPDATE LPLIST_ALL SET PRECEDINGFYFINASOFDATE_min=(SELECT MAX(DateDate)FROM DATECONVERT D,LPER X WHERE D.DateLong=X.PRECEDINGFYFINASOFDATE AND X.PRECEDINGFYFINASOFDATE>100000 AND X.LID_DD=LPLIST_ALL.LID_DD_min)

            UPDATE LPLIST_ALL SET SPECIALSERVICER=(SELECT MAX(SPECIALSERVICER)FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID)
            UPDATE LPLIST_ALL SET TotalPandIAdvanceOutstanding=(SELECT MAX(TotalPandIAdvanceOutstanding)FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.DISTRIBUTIONDATE=LPLIST_ALL.LPER_MaxDistributionDateLONG)


            ---PROPERTY
            --DECLARE @DASH NVARCHAR(10)
            SELECT @DASH='-'
            UPDATE LPLIST_ALL SET PROP_MaxDistributionDateLONG=(SELECT MAX(DistributionDate) FROM PROPERTY P WHERE DistributionDate>100000 AND
            LPLIST_ALL.ExATransactionID = P.EXATRANSACTIONID AND LPLIST_ALL.ProspectusLoanId=P.PROSPECTUSLOANID AND LPLIST_ALL.PROPERTYID=P.PROPERTYID
            AND P.PROPERTYADDRESS IS NOT NULL AND P.PROPERTYADDRESS<>@DASH AND P.PROPERTYCITY IS NOT NULL AND P.PROPERTYCITY<>@DASH AND P.PROPERTYSTATE IS NOT NULL AND P.PROPERTYSTATE<>@DASH AND P.PROPERTYZIPCODE>=0)

            UPDATE LPLIST_ALL SET PROP_MinDistributionDateLONG=(SELECT MIN(DistributionDate) FROM PROPERTY P WHERE DistributionDate>100000 AND
            LPLIST_ALL.ExATransactionID = P.EXATRANSACTIONID AND LPLIST_ALL.ProspectusLoanId=P.PROSPECTUSLOANID AND LPLIST_ALL.PROPERTYID=P.PROPERTYID
            AND P.PROPERTYADDRESS IS NOT NULL AND P.PROPERTYADDRESS<>@DASH AND P.PROPERTYCITY IS NOT NULL AND P.PROPERTYCITY<>@DASH AND P.PROPERTYSTATE IS NOT NULL AND P.PROPERTYSTATE<>@DASH AND P.PROPERTYZIPCODE>=0)

            UPDATE LPLIST_ALL SET LID_PID_DD_Max=(SELECT MAX(LID_PID_DD) FROM PROPERTY P WHERE P.DistributionDate=LPLIST_ALL.PROP_MaxDistributionDateLONG 
            AND LPLIST_ALL.ExATransactionID = P.EXATRANSACTIONID AND LPLIST_ALL.ProspectusLoanId=P.PROSPECTUSLOANID AND LPLIST_ALL.PROPERTYID=P.PROPERTYID
            AND P.PROPERTYADDRESS IS NOT NULL AND P.PROPERTYADDRESS<>@DASH AND P.PROPERTYCITY IS NOT NULL AND P.PROPERTYCITY<>@DASH AND P.PROPERTYSTATE IS NOT NULL AND P.PROPERTYSTATE<>@DASH AND P.PROPERTYZIPCODE>=0)

            UPDATE LPLIST_ALL SET LID_PID_DD_Min=(SELECT MAX(LID_PID_DD) FROM PROPERTY P WHERE P.DistributionDate=LPLIST_ALL.PROP_MinDistributionDateLONG 
            AND LPLIST_ALL.ExATransactionID = P.EXATRANSACTIONID AND LPLIST_ALL.ProspectusLoanId=P.PROSPECTUSLOANID AND LPLIST_ALL.PROPERTYID=P.PROPERTYID
            AND P.PROPERTYADDRESS IS NOT NULL AND P.PROPERTYADDRESS<>@DASH AND P.PROPERTYCITY IS NOT NULL AND P.PROPERTYCITY<>@DASH AND P.PROPERTYSTATE IS NOT NULL AND P.PROPERTYSTATE<>@DASH AND P.PROPERTYZIPCODE>=0)

            UPDATE LPLIST_ALL SET PROP_MaxDistributionDate=(SELECT DateDate from DATECONVERT WHERE DateLong=PROP_MaxDistributionDateLONG)
            UPDATE LPLIST_ALL SET PROP_MinDistributionDate=(SELECT DateDate from DATECONVERT WHERE DateLong=PROP_MinDistributionDateLONG)

            UPDATE LPLIST_ALL SET
            TRANSACTIONID=X.TRANSACTIONID,
            LOANID=X.LOANID,
            PROSPECTUSLOANID=X.PROSPECTUSLOANID,
            PROPERTYID=X.PROPERTYID,
            CROSSCOLLATERALIZEDLOANGRP=X.CROSSCOLLATERALIZEDLOANGRP,
            PROPERTYNAME=X.PROPERTYNAME,
            PROPERTYADDRESS=X.PROPERTYADDRESS,
            PROPERTYCITY=X.PROPERTYCITY,
            PROPERTYSTATE=X.PROPERTYSTATE,
            PROPERTYZIPCODE=X.PROPERTYZIPCODE,
            PROPERTYCOUNTY=X.PROPERTYCOUNTY,
            PROPERTYSUBTYPE=CASE WHEN X.PROPERTYTYPE='SE' THEN 'Senior' ELSE (CASE WHEN X.PROPERTYTYPE='HC' THEN 'Healthcare' ELSE PROPERTYSUBTYPE END) END,
            --PROPERTYTYPE=X.PROPERTYTYPE,
            YEARBUILT=X.YEARBUILT,
            YEARLASTRENOVATED=X.YEARLASTRENOVATED,
            CURRENTNUMBEROFUNITSBEDSROOMS=X.CURRENTNUMBEROFUNITSBEDSROOMS,
            PROPERTYSTATUS=X.PROPERTYSTATUS,
            ALLOCATEDPERCENTAGEOFLOANATCONTRIBUTION=X.ALLOCATEDPERCENTAGEOFLOANATCONTRIBUTION,
            CURRENTALLOCATEDPERCENTAGE=X.CURRENTALLOCATEDPERCENTAGE,
            CURRENTALLOCATEDENDINGSCHEDULEDLOANAMOUNT=X.CURRENTALLOCATEDENDINGSCHEDULEDLOANAMOUNT,
            GROUNDLEASEYNS=X.GROUNDLEASEYNS,
            MOSTRECENTVALUE=X.MOSTRECENTVALUE,
            MOSTRECENTPHYSICALOCCUPANCY=X.MOSTRECENTPHYSICALOCCUPANCY,
            FISCALYEARENDMONTH=X.FISCALYEARENDMONTH,
            REVENUEATCONTRIBUTION=X.REVENUEATCONTRIBUTION,
            OPERATINGEXPENSESATCONTRIBUTION=X.OPERATINGEXPENSESATCONTRIBUTION,
            NOIATCONTRIBUTION=X.NOIATCONTRIBUTION,
            DSCRNOIATCONTRIBUTION=X.DSCRNOIATCONTRIBUTION,
            VALUATIONAMOUNTATCONTRIBUTION=X.VALUATIONAMOUNTATCONTRIBUTION,
            PHYSICALOCCUPANCYATCONTRIBUTION=X.PHYSICALOCCUPANCYATCONTRIBUTION,
            PRECEDINGFISCALYEARREVENUE=X.PRECEDINGFISCALYEARREVENUE,
            PRECEDINGFYOPEXP=X.PRECEDINGFYOPEXP,
            PRECEDINGFYNOI=X.PRECEDINGFYNOI,
            PRECEDINGFYDEBTSERVAMT=X.PRECEDINGFYDEBTSERVAMT,
            PRECEDINGFYDSCRNOI=X.PRECEDINGFYDSCRNOI,
            PRECEDINGFYPHYSOCCUP=X.PRECEDINGFYPHYSOCCUP,
            SECPRECEDINGFYREVENUE=X.SECPRECEDINGFYREVENUE,
            SECPRECEDINGFYOPEXP=X.SECPRECEDINGFYOPEXP,
            SECPRECEDINGFYNOI=X.SECPRECEDINGFYNOI,
            SECPRECEDINGFYDEBTSERVAMT=X.SECPRECEDINGFYDEBTSERVAMT,
            SECPRECEDINGFYDSCRNOI=X.SECPRECEDINGFYDSCRNOI,
            SECPRECEDINGFYPHYSOCC=X.SECPRECEDINGFYPHYSOCC,
            MOSTRECENTREVENUE=X.MOSTRECENTREVENUE,
            MOSTRECENTOPERATINGEXP=X.MOSTRECENTOPERATINGEXP,
            MOSTRECENTNOI=X.MOSTRECENTNOI,
            MOSTRECENTDEBTSERVICEAMT=X.MOSTRECENTDEBTSERVICEAMT,
            MOSTRECENTDSCRNOI=X.MOSTRECENTDSCRNOI,
            MOSTRECENTFINANCIALINDICATOR=X.MOSTRECENTFINANCIALINDICATOR,
            NCFATCONTRIBUTION=X.NCFATCONTRIBUTION,
            DSCRNCFATCONTRIBUTION=X.DSCRNCFATCONTRIBUTION,
            PRECEDINGFYNCF=X.PRECEDINGFYNCF,
            PRECEDINGFISCALYEARDSCRNCF=X.PRECEDINGFISCALYEARDSCRNCF,
            SECONDPRECEDINGFYNCF=X.SECONDPRECEDINGFYNCF,
            SECONDPRECEDINGFYDSCRNCF=X.SECONDPRECEDINGFYDSCRNCF,
            MOSTRECENTNCF=X.MOSTRECENTNCF,
            MOSTRECENTDSCRNCF=X.MOSTRECENTDSCRNCF,
            NOINCFINDICATOR=X.NOINCFINDICATOR,
            DEFERREDMAINTENANCEFLAGYN=X.DEFERREDMAINTENANCEFLAGYN,
            PROPERTYCONDITION=X.PROPERTYCONDITION,
            MOSTRECENTVALUATIONSOURCE=X.MOSTRECENTVALUATIONSOURCE,
            CREDITTENANTLEASEYN=X.CREDITTENANTLEASEYN

            FROM PROPERTY X
            WHERE X.LID_PID_DD = LPLIST_ALL.LID_PID_DD_max AND LPLIST_ALL.IN_PROPERTY=1


            --APPLY TO EXHIBIT TO USE IN PLACE PROPERTY WHEN PROPERTY IS NULL
            UPDATE LPLIST_ALL SET 
            PROPERTYNAME=(SELECT MAX(PROPERTYNAME)  FROM EXHIBITA X WHERE X.EXA_PLID = LPLIST_ALL.EXA_PLID),
            PROPERTYADDRESS=(SELECT MAX(PROPERTYADDRESS)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            PROPERTYCITY=(SELECT MAX(PROPERTYCITY)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            PROPERTYSTATE=(SELECT MAX(PROPERTYSTATE)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            PROPERTYZIPCODE=(SELECT MAX(PROPERTYZIPCODE)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            PROPERTYCOUNTY=(SELECT MAX(PROPERTYCOUNTY)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            YEARBUILT=(SELECT MAX(YEARBUILT)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            YEARLASTRENOVATED=(SELECT MAX(YEARLASTRENOVATED)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
            CURRENTNUMBEROFUNITSBEDSROOMS=(SELECT MAX(CURRENTNUMBEROFUNITSBEDSROOMS)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID)
            WHERE PROPERTYNAME IS NULL OR PROPERTYADDRESS IS NULL OR PROPERTYCITY IS NULL OR PROPERTYSTATE IS NULL 
            OR PROPERTYADDRESS=@DASH OR PROPERTYCITY=@DASH OR PROPERTYSTATE=@DASH

            UPDATE LPLIST_ALL SET YEARBUILT=(SELECT MAX(YEARBUILT)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID) WHERE YEARBUILT IS NULL OR YEARBUILT<1492 OR YEARBUILT>2025
            UPDATE LPLIST_ALL SET YEARLASTRENOVATED=(SELECT MAX(YEARLASTRENOVATED)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID) WHERE YEARLASTRENOVATED IS NULL OR YEARLASTRENOVATED<YEARBUILT OR YEARLASTRENOVATED>2025
            UPDATE LPLIST_ALL SET CURRENTNUMBEROFUNITSBEDSROOMS=(SELECT MAX(CURRENTNUMBEROFUNITSBEDSROOMS)  FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID) WHERE CURRENTNUMBEROFUNITSBEDSROOMS IS NULL OR CURRENTNUMBEROFUNITSBEDSROOMS<2 OR CURRENTNUMBEROFUNITSBEDSROOMS>10000

            UPDATE LPLIST_ALL SET DISTRIBUTIONDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.DISTRIBUTIONDATE AND X.DISTRIBUTIONDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE DISTRIBUTIONDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTVALUATIONDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.MOSTRECENTVALUATIONDATE AND X.MOSTRECENTVALUATIONDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID)  WHERE MOSTRECENTVALUATIONDATE IS NULL
            UPDATE LPLIST_ALL SET DATEASSETEXPECTEDTOBERESOLVEDORFORECLOSED=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.DATEASSETEXPECTEDTOBERESOLVEDORFORECLOSED AND X.DATEASSETEXPECTEDTOBERESOLVEDORFORECLOSED>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE DATEASSETEXPECTEDTOBERESOLVEDORFORECLOSED IS NULL
            UPDATE LPLIST_ALL SET FORECLOSURESTARTDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.FORECLOSURESTARTDATE AND X.FORECLOSURESTARTDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE FORECLOSURESTARTDATE IS NULL
            UPDATE LPLIST_ALL SET REODATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.REODATE AND X.REODATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE REODATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTOCCUPANCYASOFDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.MOSTRECENTOCCUPANCYASOFDATE AND X.MOSTRECENTOCCUPANCYASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE MOSTRECENTOCCUPANCYASOFDATE IS NULL
            UPDATE LPLIST_ALL SET CONTRIBUTIONFINANCIALSASOFDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.CONTRIBUTIONFINANCIALSASOFDATE AND X.CONTRIBUTIONFINANCIALSASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE CONTRIBUTIONFINANCIALSASOFDATE IS NULL
            UPDATE LPLIST_ALL SET VALUATIONDATEATCONTRIBUTION=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.VALUATIONDATEATCONTRIBUTION AND X.VALUATIONDATEATCONTRIBUTION>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE VALUATIONDATEATCONTRIBUTION IS NULL
            UPDATE LPLIST_ALL SET DATEOFLASTINSPECTION=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.DATEOFLASTINSPECTION AND X.DATEOFLASTINSPECTION>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE DATEOFLASTINSPECTION IS NULL
            UPDATE LPLIST_ALL SET PRECEDINGFISCALYEARFINANCIALASOFDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.PRECEDINGFISCALYEARFINANCIALASOFDATE AND X.PRECEDINGFISCALYEARFINANCIALASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE PRECEDINGFISCALYEARFINANCIALASOFDATE IS NULL
            UPDATE LPLIST_ALL SET SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE AND X.SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE IS NULL
            UPDATE LPLIST_ALL SET PROPERTYCOLLATERALCONTRIBUTIONDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.PROPERTYCOLLATERALCONTRIBUTIONDATE AND X.PROPERTYCOLLATERALCONTRIBUTIONDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE PROPERTYCOLLATERALCONTRIBUTIONDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTFINANCIALASOFSTARTDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.MOSTRECENTFINANCIALASOFSTARTDATE AND X.MOSTRECENTFINANCIALASOFSTARTDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE MOSTRECENTFINANCIALASOFSTARTDATE IS NULL
            UPDATE LPLIST_ALL SET MOSTRECENTFINANCIALASOFENDDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.MOSTRECENTFINANCIALASOFENDDATE AND X.MOSTRECENTFINANCIALASOFENDDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID) WHERE MOSTRECENTFINANCIALASOFENDDATE IS NULL

            UPDATE LPLIST_ALL SET PRECEDINGFISCALYEARFINANCIALASOFDATE_min=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.PRECEDINGFISCALYEARFINANCIALASOFDATE AND X.PRECEDINGFISCALYEARFINANCIALASOFDATE>100000 AND X.LID_PID_DD=LPLIST_ALL.LID_PID_DD_min)
            UPDATE LPLIST_ALL SET SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE_min=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE AND X.SECONDPRECEDINGFISCALYEARFINANCIALASOFDATE>100000 AND X.LID_PID_DD=LPLIST_ALL.LID_PID_DD_min)

        
        SELECT CONCAT('STEP#1: LPLIST_ALL CALCED DATES FROM BIG 4/TIME=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
        SELECT X.VALUATIONDATEATCONTRIBUTION,CONTRIBUTIONFINANCIALSASOFDATE,UWDATE,ORIGINATIONDATE,MATURITYDATE,LOANORIGTERM,LOANIOPER FROM LPLIST_ALL X ORDER BY X.VALUATIONDATEATCONTRIBUTION DESC
        SELECT DISTINCT
        YEAR(VALUATIONDATEATCONTRIBUTION) AS VAL_YR,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION)) AS NUM_VAL_YR,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND ORIGINATIONDATE IS NULL) AS ORIG_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND CONTRIBUTIONFINANCIALSASOFDATE IS NULL) AS CONTRI_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND MaturityDATE IS NULL) AS Mat_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND LOANORIGTERM IS NULL) AS tERM_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND ABS(DATEDIFF(M,ORIGINATIONDATE,VALUATIONDATEATCONTRIBUTION))>12) AS ORIG_VAL_GT12M,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND ABS(DATEDIFF(M,CONTRIBUTIONFINANCIALSASOFDATE,VALUATIONDATEATCONTRIBUTION))>12) AS CONTR_VAL_GT12M,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.VALUATIONDATEATCONTRIBUTION)=YEAR(L.VALUATIONDATEATCONTRIBUTION) AND ABS(DATEDIFF(M,ORIGINATIONDATE,MaturityDATE)-LOANORIGTERM)>12) AS ORIG_MAT_TERM_GT12M
        FROM LPLIST_ALL L ORDER BY YEAR(VALUATIONDATEATCONTRIBUTION) DESC

        --DECLARE @MAXCONTRIDATE DATE SELECT @MAXCONTRIDATE=DATEFROMPARTS(2022,4,30) DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
        ---EXA_PLID WITH VAL,UW,REV IN YEAR
        UPDATE LPLIST_ALL SET
        EXHIBITA_YEARBUILT=X.YEARBUILT,
        EXHIBITA_YEARLASTRENOVATED=X.YEARLASTRENOVATED,
        EXHIBITA_CURRENTNUMBEROFUNITSBEDSROOMS=X.CURRENTNUMBEROFUNITSBEDSROOMS,
        EXHIBITA_PROPERTYNAME=X.PROPERTYNAME,
        EXHIBITA_PROPERTYADDRESS=X.PROPERTYADDRESS,
        EXHIBITA_PROPERTYCITY=X.PROPERTYCITY,
        EXHIBITA_PROPERTYSTATE=X.PROPERTYSTATE,
        EXHIBITA_PROPERTYZIPCODE=X.PROPERTYZIPCODE,
        EXHIBITA_PROPERTYCOUNTY=X.PROPERTYCOUNTY,
        EXHIBITA_NUMBEROFPROPERTIES=X.NUMBEROFPROPERTIES,
        EXHIBITA_MATURITYDATE=CASE WHEN X.MATURITYDATE>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=X.MATURITYDATE) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=X.MATURITYDATE) END,
        EXHIBITA_TOTALLOANAMOUNTATORIGINATION=X.TOTALLOANAMOUNTATORIGINATION,
        EXHIBITA_LOANORIGTERM=X.LOANORIGTERM,
        EXHIBITA_ORIGINATIONDATE=CASE WHEN X.ORIGINATIONDATE>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=X.ORIGINATIONDATE) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=X.ORIGINATIONDATE) END,
        EXHIBITA_SCHEDULEDLOANBALANCEATMATURITY=X.SCHEDULEDLOANBALANCEATMATURITY,
        EXHIBITA_TOTALLOANAMOUNTATCONTRIBUTION=X.TOTALLOANAMOUNTATCONTRIBUTION,
        EXHIBITA_VALUATIONAMOUNTATCONTRIBUTION=X.VALUATIONAMOUNTATCONTRIBUTION,
        EXHIBITA_VALUATIONDATEATCONTRIBUTION=CASE WHEN X.VALUATIONDATEATCONTRIBUTION>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=X.VALUATIONDATEATCONTRIBUTION) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=X.VALUATIONDATEATCONTRIBUTION) END,
        EXHIBITA_CONTRIBUTIONFINANCIALSASOFDATE=CASE WHEN X.CONTRIBUTIONFINANCIALSASOFDATE>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=X.CONTRIBUTIONFINANCIALSASOFDATE) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=X.CONTRIBUTIONFINANCIALSASOFDATE) END,
        EXHIBITA_CUTOFFDATELTV=X.CUTOFFDATELTV,
        EXHIBITA_MATURITYLTV=X.MATURITYLTV,
        EXHIBITA_REVENUEATCONTRIBUTION=X.REVENUEATCONTRIBUTION,
        EXHIBITA_OPERATINGEXPENSESATCONTRIBUTION=X.OPERATINGEXPENSESATCONTRIBUTION,
        EXHIBITA_NOIATCONTRIBUTION=X.NOIATCONTRIBUTION,
        EXHIBITA_NCFATCONTRIBUTION=X.NCFATCONTRIBUTION,
        EXHIBITA_PHYSICALOCCUPANCYATCONTRIBUTION=X.PHYSICALOCCUPANCYATCONTRIBUTION

        FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID


        UPDATE LPLIST_ALL SET
        LPER_NumberOfProperties=(SELECT MAX(X.NumberOfProperties) FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID),
        LPER_TotalLoanAmountatOrigination=(SELECT MAX(X.TotalLoanAmountatOrigination) FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID),
        LPER_MaturityDate=(SELECT CASE WHEN MAX(X.MaturityDate)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.MaturityDate)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.MaturityDate)) END FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID),
        LPER_MostRecentValuationDate=(SELECT CASE WHEN MAX(X.MostRecentValuationDate)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.MostRecentValuationDate)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.MostRecentValuationDate)) END FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID),
        LPER_MostRecentFinAsOfEndDate=(SELECT CASE WHEN MAX(X.MostRecentFinAsOfEndDate)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.MostRecentFinAsOfEndDate)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.MostRecentFinAsOfEndDate)) END FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID)


        UPDATE LPLIST_ALL SET
        LPER_MostRecentValue=(SELECT MAX(X.MostRecentValue) FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.MostRecentValue>0
                                AND X.DISTRIBUTIONDATE=(SELECT MAX(Z.DISTRIBUTIONDATE) FROM LPER Z WHERE Z.LOANID=LPLIST_ALL.LOANID 
                                                            AND (SELECT CASE WHEN MAX(Z.MostRecentValuationDate)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(Z.MostRecentValuationDate)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(Z.MostRecentValuationDate)) END FROM LPER Z WHERE Z.LOANID=LPLIST_ALL.LOANID)
                                                            =LPLIST_ALL.LPER_MostRecentValuationDate)),

        LPER_MOSTRECENTPHYSICALOCC=(SELECT MAX(X.MOSTRECENTPHYSICALOCC) FROM LPER X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.MOSTRECENTPHYSICALOCC>0 AND X.MOSTRECENTPHYSICALOCC<=0
                                AND X.DISTRIBUTIONDATE=(SELECT MAX(Z.DISTRIBUTIONDATE) FROM LPER Z WHERE Z.LOANID=LPLIST_ALL.LOANID 
                                                            AND (SELECT CASE WHEN MAX(Z.MostRecentFinAsOfEndDate)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(Z.MostRecentFinAsOfEndDate)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(Z.MostRecentFinAsOfEndDate)) END FROM LPER Z WHERE Z.LOANID=LPLIST_ALL.LOANID)
                                                            =LPLIST_ALL.LPER_MostRecentFinAsOfEndDate))

        UPDATE LPLIST_ALL SET LPER_MostRecentValuationDate=NULL WHERE LPER_MostRecentValue=0 OR LPER_MostRecentValue IS NULL

        UPDATE LPLIST_ALL SET
        PROPERTY_YEARBUILT=(SELECT MAX(YEARBUILT) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_YEARLASTRENOVATED=(SELECT MAX(YEARLASTRENOVATED) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_CURRENTNUMBEROFUNITSBEDSROOMS=(SELECT MAX(CURRENTNUMBEROFUNITSBEDSROOMS) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PROPERTYNAME=(SELECT MAX(PROPERTYNAME) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PROPERTYADDRESS=(SELECT MAX(PROPERTYADDRESS) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PROPERTYCITY=(SELECT MAX(PROPERTYCITY) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PROPERTYSTATE=(SELECT MAX(PROPERTYSTATE) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PROPERTYZIPCODE=(SELECT MAX(PROPERTYZIPCODE) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PROPERTYCOUNTY=(SELECT MAX(PROPERTYCOUNTY) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_MOSTRECENTVALUATIONDATE=(SELECT CASE WHEN MAX(X.MOSTRECENTVALUATIONDATE)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.MOSTRECENTVALUATIONDATE)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.MOSTRECENTVALUATIONDATE)) END FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_VALUATIONDATEATCONTRIBUTION=(SELECT CASE WHEN MAX(X.VALUATIONDATEATCONTRIBUTION)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.VALUATIONDATEATCONTRIBUTION)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.VALUATIONDATEATCONTRIBUTION)) END FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_CONTRIBUTIONFINANCIALSASOFDATE=(SELECT CASE WHEN MAX(X.CONTRIBUTIONFINANCIALSASOFDATE)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.CONTRIBUTIONFINANCIALSASOFDATE)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.VALUATIONDATEATCONTRIBUTION)) END FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_REVENUEATCONTRIBUTION=(SELECT MAX(REVENUEATCONTRIBUTION) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_OPERATINGEXPENSESATCONTRIBUTION=(SELECT MAX(OPERATINGEXPENSESATCONTRIBUTION) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_NOIATCONTRIBUTION=(SELECT MAX(NOIATCONTRIBUTION) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_NCFATCONTRIBUTION=(SELECT MAX(NCFATCONTRIBUTION) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_PHYSICALOCCUPANCYATCONTRIBUTION=(SELECT MAX(PHYSICALOCCUPANCYATCONTRIBUTION) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        PROPERTY_MOSTRECENTOCCUPANCYASOFDATE=(SELECT CASE WHEN MAX(X.MOSTRECENTOCCUPANCYASOFDATE)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(X.MOSTRECENTOCCUPANCYASOFDATE)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(X.MOSTRECENTOCCUPANCYASOFDATE)) END FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID)


        UPDATE LPLIST_ALL SET
        PROPERTY_MostRecentValue=(SELECT MAX(X.MostRecentValue) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.MostRecentValue>0
                                AND X.DISTRIBUTIONDATE=(SELECT MAX(Z.DISTRIBUTIONDATE) FROM PROPERTY Z WHERE Z.LOANID=LPLIST_ALL.LOANID 
                                                            AND (SELECT CASE WHEN MAX(Z.MostRecentValuationDate)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(Z.MostRecentValuationDate)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(Z.MostRecentValuationDate)) END FROM PROPERTY Z WHERE Z.LOANID=LPLIST_ALL.LOANID)
                                                            =LPLIST_ALL.PROPERTY_MostRecentValuationDate))
        UPDATE LPLIST_ALL SET
        PROPERTY_VALUATIONAMOUNTATCONTRIBUTION=(SELECT MAX(X.VALUATIONAMOUNTATCONTRIBUTION) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.VALUATIONAMOUNTATCONTRIBUTION>0
                                AND X.DISTRIBUTIONDATE=(SELECT MAX(Z.DISTRIBUTIONDATE) FROM PROPERTY Z WHERE Z.LOANID=LPLIST_ALL.LOANID 
                                                            AND (SELECT CASE WHEN MAX(Z.VALUATIONDATEATCONTRIBUTION)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(Z.VALUATIONDATEATCONTRIBUTION)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(Z.VALUATIONDATEATCONTRIBUTION)) END FROM PROPERTY Z WHERE Z.LOANID=LPLIST_ALL.LOANID)
                                                            =LPLIST_ALL.PROPERTY_VALUATIONDATEATCONTRIBUTION))
        UPDATE LPLIST_ALL SET
        PROPERTY_MOSTRECENTPHYSICALOCCUPANCY=(SELECT MAX(X.MOSTRECENTPHYSICALOCCUPANCY) FROM PROPERTY X WHERE X.LOANID=LPLIST_ALL.LOANID AND X.MOSTRECENTPHYSICALOCCUPANCY>0 AND X.MOSTRECENTPHYSICALOCCUPANCY<=0
                                AND X.DISTRIBUTIONDATE=(SELECT MAX(Z.DISTRIBUTIONDATE) FROM PROPERTY Z WHERE Z.LOANID=LPLIST_ALL.LOANID 
                                                            AND (SELECT CASE WHEN MAX(Z.MOSTRECENTOCCUPANCYASOFDATE)>100000 THEN (SELECT DATEDATE FROM DATECONVERT WHERE DATELONG=MAX(Z.MOSTRECENTOCCUPANCYASOFDATE)) ELSE (SELECT DATEDATE FROM DATECONVERT WHERE DATEDATELONG=MAX(Z.MOSTRECENTOCCUPANCYASOFDATE)) END FROM PROPERTY Z WHERE Z.LOANID=LPLIST_ALL.LOANID)
                                                            =LPLIST_ALL.PROPERTY_MOSTRECENTOCCUPANCYASOFDATE))


        UPDATE LPLIST_ALL SET PROPERTY_MostRecentValuationDate=NULL WHERE PROPERTY_MostRecentValue=0 OR PROPERTY_MostRecentValue IS NULL

        -----------------------------------------------------------------------------------
        --LOAN ORIGINATION AMOUNT
        UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATORIGINATION=LPER_TotalLoanAmountatOrigination WHERE LPER_TotalLoanAmountatOrigination>0 
        UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATORIGINATION=EXHIBITA_TOTALLOANAMOUNTATORIGINATION WHERE EXHIBITA_TOTALLOANAMOUNTATORIGINATION>0 AND TOTALLOANAMOUNTATORIGINATION IS NULL 
        UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATORIGINATION=EXHIBITA_TOTALLOANAMOUNTATCONTRIBUTION WHERE EXHIBITA_TOTALLOANAMOUNTATCONTRIBUTION>0 AND TOTALLOANAMOUNTATORIGINATION IS NULL 

        UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATCONTRIBUTION=EXHIBITA_TOTALLOANAMOUNTATCONTRIBUTION WHERE EXHIBITA_TOTALLOANAMOUNTATCONTRIBUTION>0 
        UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATCONTRIBUTION=TOTALLOANAMOUNTATORIGINATION 
        WHERE (TOTALLOANAMOUNTATCONTRIBUTION IS NULL OR TOTALLOANAMOUNTATCONTRIBUTION>TOTALLOANAMOUNTATORIGINATION) AND TOTALLOANAMOUNTATORIGINATION>0

        UPDATE LPLIST_ALL SET TOTALLOANAMOUNTATORIGINATION=TOTALLOANAMOUNTATCONTRIBUTION 
        WHERE (TOTALLOANAMOUNTATORIGINATION IS NULL OR TOTALLOANAMOUNTATCONTRIBUTION>TOTALLOANAMOUNTATORIGINATION) AND TOTALLOANAMOUNTATCONTRIBUTION>0

        --DECLARE @MAXCONTRIDATE DATE SELECT @MAXCONTRIDATE=DATEFROMPARTS(2022,4,30) DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
        --UW_CAPRATE

        ---MAY BE REDUNDANT ... CLEAN UP LATER
        UPDATE LPLIST_ALL SET
        MATURITYDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE X.LOANID = LPLIST_ALL.LOANID AND D.DateLong=X.MATURITYDATE AND X.MATURITYDATE>100000),
        CONTRIBUTIONFINANCIALSASOFDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.CONTRIBUTIONFINANCIALSASOFDATE AND X.CONTRIBUTIONFINANCIALSASOFDATE>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        VALUATIONDATEATCONTRIBUTION=(SELECT MAX(DateDate) FROM DATECONVERT D, PROPERTY X WHERE D.DateLong=X.VALUATIONDATEATCONTRIBUTION AND X.VALUATIONDATEATCONTRIBUTION>100000 AND X.LOANID=LPLIST_ALL.LOANID AND X.PROPERTYID=LPLIST_ALL.PROPERTYID),
        ORIGINATIONDATE=DATEADD(M,-(SELECT LOANSEAS FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID),
                        (SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE X.LOANID = LPLIST_ALL.LOANID AND D.DateLong=X.LastLoanContDate AND X.MATURITYDATE>100000))

        UPDATE LPLIST_ALL SET
        CONTRIBUTIONFINANCIALSASOFDATE=(SELECT MAX(DateDate) FROM DATECONVERT D, EXHIBITA X WHERE D.DATELONG=X.CONTRIBUTIONFINANCIALSASOFDATE AND X.EXA_PLID=LPLIST_ALL.EXA_PLID AND X.CONTRIBUTIONFINANCIALSASOFDATE>100000)
        WHERE CONTRIBUTIONFINANCIALSASOFDATE IS NULL

        UPDATE LPLIST_ALL SET
        VALUATIONDATEATCONTRIBUTION=DATEADD(M,-(SELECT LOANSEAS FROM EXHIBITA X WHERE X.EXA_PLID=LPLIST_ALL.EXA_PLID)-3,CONTRIBUTIONFINANCIALSASOFDATE)
        WHERE VALUATIONDATEATCONTRIBUTION IS NULL

        UPDATE LPLIST_ALL SET
        ORIGINATIONDATE=DATEADD(D,DATEDIFF(D,VALUATIONDATEATCONTRIBUTION,CONTRIBUTIONFINANCIALSASOFDATE)/2,VALUATIONDATEATCONTRIBUTION) 
        WHERE ORIGINATIONDATE IS NULL AND VALUATIONDATEATCONTRIBUTION<CONTRIBUTIONFINANCIALSASOFDATE

        UPDATE LPLIST_ALL SET
        ORIGINATIONDATE=DATEADD(D,DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,VALUATIONDATEATCONTRIBUTION)/2,CONTRIBUTIONFINANCIALSASOFDATE) 
        WHERE ORIGINATIONDATE IS NULL AND CONTRIBUTIONFINANCIALSASOFDATE<VALUATIONDATEATCONTRIBUTION

        UPDATE LPLIST_ALL SET
        MATURITYDATE=DATEADD(M,LOANORIGTERM,ORIGINATIONDATE) 
        WHERE MATURITYDATE IS NULL AND ORIGINATIONDATE IS NOT NULL AND LOANORIGTERM IS NOT NULL


        UPDATE LPLIST_ALL SET
        HASUW=0,
        --VALUATIONDATEATCONTRIBUTION=NULL,
        --CONTRIBUTIONFINANCIALSASOFDATE=NULL,
        VALUATIONAMOUNTATCONTRIBUTION=NULL,
        REVENUEATCONTRIBUTION=NULL,
        OPERATINGEXPENSESATCONTRIBUTION=NULL,
        NOIATCONTRIBUTION=NULL,
        NCFATCONTRIBUTION=NULL,
        PHYSICALOCCUPANCYATCONTRIBUTION=NULL,
        UWDATE=NULL,
        UW_CAPRATE=NULL,
        VAL_CAPRATE=NULL,
        UW_VALUATION=NULL,
        UW_VAL_PERUNIT=NULL,
        UW_REV_ACTUAL_RATIO=NULL,
        UW_EXP_ACTUAL_RATIO=NULL,
        UW_NOI_ACTUAL_RATIO=NULL,
        UW_NCF_ACTUAL_RATIO=NULL,
        UW_OCCUP=NULL


        UPDATE LPLIST_ALL SET UWNOI=(UWREVENUE-UWOPERATINGEXPENSES) WHERE (UWREVENUE>1000 OR UWOPERATINGEXPENSES<UWREVENUE)
        UPDATE LPLIST_ALL SET UWNCF=UWNOI WHERE UWNCF IS NULL OR UWNCF>UWNOI

        UPDATE LPLIST_ALL SET VALUATIONAMOUNTATCONTRIBUTION=EXHIBITA_VALUATIONAMOUNTATCONTRIBUTION WHERE UWNOI>0 AND EXHIBITA_VALUATIONAMOUNTATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET REVENUEATCONTRIBUTION=EXHIBITA_REVENUEATCONTRIBUTION WHERE UWNOI>0 AND EXHIBITA_REVENUEATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET OPERATINGEXPENSESATCONTRIBUTION=EXHIBITA_OPERATINGEXPENSESATCONTRIBUTION WHERE UWNOI>0 AND EXHIBITA_OPERATINGEXPENSESATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET NOIATCONTRIBUTION=EXHIBITA_NOIATCONTRIBUTION WHERE UWNOI>0 AND EXHIBITA_NOIATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET NCFATCONTRIBUTION=EXHIBITA_NCFATCONTRIBUTION WHERE UWNOI>0 AND EXHIBITA_NCFATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET PHYSICALOCCUPANCYATCONTRIBUTION=EXHIBITA_PHYSICALOCCUPANCYATCONTRIBUTION WHERE UWNOI>0 AND EXHIBITA_PHYSICALOCCUPANCYATCONTRIBUTION>0 AND EXHIBITA_PHYSICALOCCUPANCYATCONTRIBUTION<=1

        UPDATE LPLIST_ALL SET VALUATIONAMOUNTATCONTRIBUTION=PROPERTY_VALUATIONAMOUNTATCONTRIBUTION WHERE VALUATIONAMOUNTATCONTRIBUTION IS NULL
        UPDATE LPLIST_ALL SET VALUATIONAMOUNTATCONTRIBUTION=EXHIBITA_SCHEDULEDLOANBALANCEATMATURITY/EXHIBITA_MATURITYLTV WHERE EXHIBITA_MATURITYLTV>.1 AND (VALUATIONAMOUNTATCONTRIBUTION=0 OR VALUATIONAMOUNTATCONTRIBUTION IS NULL)
        UPDATE LPLIST_ALL SET REVENUEATCONTRIBUTION=PROPERTY_REVENUEATCONTRIBUTION WHERE PROPERTY_REVENUEATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET OPERATINGEXPENSESATCONTRIBUTION=PROPERTY_OPERATINGEXPENSESATCONTRIBUTION WHERE PROPERTY_OPERATINGEXPENSESATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET NOIATCONTRIBUTION=PROPERTY_NOIATCONTRIBUTION WHERE PROPERTY_NOIATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET NCFATCONTRIBUTION=PROPERTY_NCFATCONTRIBUTION WHERE PROPERTY_NCFATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET PHYSICALOCCUPANCYATCONTRIBUTION=PROPERTY_PHYSICALOCCUPANCYATCONTRIBUTION WHERE PROPERTY_PHYSICALOCCUPANCYATCONTRIBUTION>0 AND PROPERTY_PHYSICALOCCUPANCYATCONTRIBUTION<=1

        UPDATE LPLIST_ALL SET NOIATCONTRIBUTION=(REVENUEATCONTRIBUTION-OPERATINGEXPENSESATCONTRIBUTION) WHERE (REVENUEATCONTRIBUTION>1000 OR OPERATINGEXPENSESATCONTRIBUTION<REVENUEATCONTRIBUTION)
        UPDATE LPLIST_ALL SET NCFATCONTRIBUTION=NOIATCONTRIBUTION WHERE NCFATCONTRIBUTION IS NULL OR NCFATCONTRIBUTION>NOIATCONTRIBUTION

        --DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
        UPDATE LPLIST_ALL SET UWDATE=NULL
        UPDATE LPLIST_ALL SET UWDATE=DATEADD(M,DATEDIFF(M,VALUATIONDATEATCONTRIBUTION,ORIGINATIONDATE)/2,VALUATIONDATEATCONTRIBUTION) 
        WHERE UWNOI>0 AND VALUATIONDATEATCONTRIBUTION IS NOT NULL AND ORIGINATIONDATE IS NOT NULL

        UPDATE LPLIST_ALL SET UWDATE=VALUATIONDATEATCONTRIBUTION 
        WHERE UWDATE IS NULL AND UWNOI>0 AND VALUATIONDATEATCONTRIBUTION IS NOT NULL

        UPDATE LPLIST_ALL SET UWDATE=CONTRIBUTIONFINANCIALSASOFDATE 
        WHERE UWDATE IS NULL AND UWNOI>0 AND CONTRIBUTIONFINANCIALSASOFDATE IS NOT NULL
        
        UPDATE LPLIST_ALL SET UWDATE=ORIGINATIONDATE 
        WHERE UWDATE IS NULL AND UWNOI>0 AND ORIGINATIONDATE IS NOT NULL

        UPDATE LPLIST_ALL SET UW_VALDATE=VALUATIONDATEATCONTRIBUTION WHERE UWNOI>0 AND VALUATIONDATEATCONTRIBUTION IS NOT NULL
        UPDATE LPLIST_ALL SET UW_VALDATE=UWDATE WHERE UW_VALDATE IS NULL

        SELECT CONCAT('STEP#3: ASSIGNED CONTRIBUTION DATES AND UWDATE /RUNTIME(SEC)=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
        SELECT X.VALUATIONDATEATCONTRIBUTION,CONTRIBUTIONFINANCIALSASOFDATE,UWDATE,ORIGINATIONDATE,MATURITYDATE,LOANORIGTERM,LOANIOPER FROM LPLIST_ALL X ORDER BY X.VALUATIONDATEATCONTRIBUTION DESC

        SELECT DISTINCT
        YEAR(CONTRIBUTIONFINANCIALSASOFDATE) AS CONTR_YR,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE)) AS NUM_VAL_YR,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND ORIGINATIONDATE IS NULL) AS ORIG_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND VALUATIONDATEATCONTRIBUTION IS NULL) AS CONTRI_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND MaturityDATE IS NULL) AS Mat_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND LOANORIGTERM IS NULL) AS tERM_NULL,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND ABS(DATEDIFF(M,ORIGINATIONDATE,CONTRIBUTIONFINANCIALSASOFDATE))>12) AS ORIG_VAL_GT12M,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND ABS(DATEDIFF(M,CONTRIBUTIONFINANCIALSASOFDATE,VALUATIONDATEATCONTRIBUTION))>12) AS CONTR_VAL_GT12M,
        (SELECT COUNT(*) FROM LPLIST_ALL X WHERE YEAR(X.CONTRIBUTIONFINANCIALSASOFDATE)=YEAR(L.CONTRIBUTIONFINANCIALSASOFDATE) AND ABS(DATEDIFF(M,ORIGINATIONDATE,MaturityDATE)-LOANORIGTERM)>12) AS ORIG_MAT_TERM_GT12M
        FROM LPLIST_ALL L ORDER BY YEAR(CONTRIBUTIONFINANCIALSASOFDATE) DESC

        --UW_CAPRATE
        UPDATE LPLIST_ALL SET UW_VALUATION=VALUATIONAMOUNTATCONTRIBUTION WHERE UWNOI>0 AND VALUATIONAMOUNTATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET UW_VAL_PERUNIT=VALUATIONAMOUNTATCONTRIBUTION/CURRENTNUMBEROFUNITSBEDSROOMS WHERE UWNOI>0 AND VALUATIONAMOUNTATCONTRIBUTION>0 AND CURRENTNUMBEROFUNITSBEDSROOMS>0

        UPDATE LPLIST_ALL SET UW_OCCUP=PHYSICALOCCUPANCYATCONTRIBUTION WHERE PHYSICALOCCUPANCYATCONTRIBUTION>0 AND PHYSICALOCCUPANCYATCONTRIBUTION<=1
        UPDATE LPLIST_ALL SET UW_REV_ACTUAL_RATIO=UWREVENUE/REVENUEATCONTRIBUTION WHERE UWREVENUE>.25*REVENUEATCONTRIBUTION AND UWREVENUE<1.75*REVENUEATCONTRIBUTION
        UPDATE LPLIST_ALL SET UW_EXP_ACTUAL_RATIO=UWOPERATINGEXPENSES/OPERATINGEXPENSESATCONTRIBUTION WHERE UWOPERATINGEXPENSES>.25*OPERATINGEXPENSESATCONTRIBUTION AND UWOPERATINGEXPENSES<1.75*OPERATINGEXPENSESATCONTRIBUTION
        UPDATE LPLIST_ALL SET UW_NOI_ACTUAL_RATIO=UWNOI/NOIATCONTRIBUTION WHERE UWNOI>.25*NOIATCONTRIBUTION AND UWNOI<1.75*NOIATCONTRIBUTION 
        UPDATE LPLIST_ALL SET UW_NCF_ACTUAL_RATIO=UWNCF/NCFATCONTRIBUTION WHERE UWNCF>.25*NCFATCONTRIBUTION AND UWNCF<1.75*NCFATCONTRIBUTION

        UPDATE LPLIST_ALL SET UW_CAPRATE= UWNOI/VALUATIONAMOUNTATCONTRIBUTION WHERE UWNOI>.01*VALUATIONAMOUNTATCONTRIBUTION AND UWNOI<.1*VALUATIONAMOUNTATCONTRIBUTION
        UPDATE LPLIST_ALL SET VAL_CAPRATE=NOIATCONTRIBUTION/VALUATIONAMOUNTATCONTRIBUTION WHERE NOIATCONTRIBUTION>.01*VALUATIONAMOUNTATCONTRIBUTION AND NOIATCONTRIBUTION<.1*VALUATIONAMOUNTATCONTRIBUTION

        ---UW-CAPRATE

        --VALUATIONS
        UPDATE LPLIST_ALL SET
        HASVAL=0,
        MOSTRECENTVALUATIONDATE=NULL,
        MOSTRECENTVALUE=NULL

        UPDATE LPLIST_ALL SET
        MOSTRECENTVALUATIONDATE=VALUATIONDATEATCONTRIBUTION,
        MOSTRECENTVALUE=VALUATIONAMOUNTATCONTRIBUTION
        WHERE VALUATIONDATEATCONTRIBUTION IS NOT NULL AND VALUATIONAMOUNTATCONTRIBUTION>0

        UPDATE LPLIST_ALL SET 
        MOSTRECENTVALUATIONDATE=PROPERTY_MOSTRECENTVALUATIONDATE,
        MOSTRECENTVALUE=PROPERTY_MOSTRECENTVALUE  
        WHERE PROPERTY_MOSTRECENTVALUE>0 AND (PROPERTY_MOSTRECENTVALUATIONDATE>MOSTRECENTVALUATIONDATE OR MOSTRECENTVALUE IS NULL)

        UPDATE LPLIST_ALL SET 
        MOSTRECENTVALUATIONDATE=LPER_MostRecentValuationDate,
        MOSTRECENTVALUE=LPER_MostRecentValue  
        WHERE LPER_MostRecentValue>0 AND (LPER_MostRecentValuationDate>MOSTRECENTVALUATIONDATE OR MOSTRECENTVALUE IS NULL)

        UPDATE LPLIST_ALL SET 
        VAL_CAPRATE=NOIATCONTRIBUTION/VALUATIONAMOUNTATCONTRIBUTION 
        WHERE VAL_CAPRATE IS NULL AND NOIATCONTRIBUTION>.01*VALUATIONAMOUNTATCONTRIBUTION AND NOIATCONTRIBUTION<.1*VALUATIONAMOUNTATCONTRIBUTION
        AND ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270

        --ALL DATES
        UPDATE LPLIST_ALL SET HASVAL=0,HASORIG=0,HasUW=0
        UPDATE LPLIST_ALL SET HASVAL=1 WHERE MOSTRECENTVALUATIONDATE IS NOT NULL AND MOSTRECENTVALUE>0
        UPDATE LPLIST_ALL SET HASORIG=1 WHERE ORIGINATIONDATE IS NOT NULL AND TOTALLOANAMOUNTATCONTRIBUTION>0
        UPDATE LPLIST_ALL SET HasUW=1 WHERE UWDATE IS NOT NULL AND UWNOI>0 AND VALUATIONAMOUNTATCONTRIBUTION>0

        --YEARBUILT
        UPDATE LPLIST_ALL SET YearBuilt=NULL WHERE YearBuilt<1492 OR YearBuilt>2021
        UPDATE LPLIST_ALL SET YEARLASTRENOVATED=NULL WHERE YEARLASTRENOVATED<1492 OR YEARLASTRENOVATED>2021
        UPDATE LPLIST_ALL SET YearBuiltRenov=YearBuilt
        UPDATE LPLIST_ALL SET YearBuiltRenov=YEARLASTRENOVATED WHERE YEARLASTRENOVATED IS NOT NULL AND YEARLASTRENOVATED>=YearBuilt


        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='GARDEN'
        WHERE LEFT(EXATRANSACTIONID,4)<>'K-SB' 
        --AND
        --(LEFT(PROPERTYSUBTYPE,3)='GAR'
        --OR LEFT(PROPERTYSUBTYPE,3)='WAL'
        --OR LEFT(PROPERTYSUBTYPE,3)='TOW'
        --OR LEFT(PROPERTYSUBTYPE,3)='MUL'
        --OR PROPERTYSUBTYPE IS NULL)

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='GARDEN(SB)'
        WHERE LEFT(EXATRANSACTIONID,4)='K-SB' 
        --AND
        --(LEFT(PROPERTYSUBTYPE,3)='GAR'
        --OR LEFT(PROPERTYSUBTYPE,3)='WAL'
        --OR LEFT(PROPERTYSUBTYPE,3)='TOW'
        --OR LEFT(PROPERTYSUBTYPE,3)='MUL'
        --OR PROPERTYSUBTYPE IS NULL)

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='MIDRISE'
        WHERE LEFT(EXATRANSACTIONID,4)<>'K-SB' AND 
        (LEFT(PROPERTYSUBTYPE,3)='MID'
        OR LEFT(PROPERTYSUBTYPE,3)='LOW'
        OR LEFT(PROPERTYSUBTYPE,2)='CO')

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='MIDRISE(SB)'
        WHERE LEFT(EXATRANSACTIONID,4)='K-SB' AND 
        (LEFT(PROPERTYSUBTYPE,3)='MID'
        OR LEFT(PROPERTYSUBTYPE,3)='LOW'
        OR LEFT(PROPERTYSUBTYPE,2)='CO')

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='HIRISE'
        WHERE LEFT(PROPERTYSUBTYPE,2)='HI'

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='STUDENT'
        WHERE LEFT(PROPERTYSUBTYPE,3)='STU'

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='MILITARY'
        WHERE LEFT(PROPERTYSUBTYPE,3)='MIL'

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='MANUF'
        WHERE LEFT(PROPERTYSUBTYPE,2)='MH'
        OR LEFT(PROPERTYSUBTYPE,3)='MAN'

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='SENIOR'
        WHERE LEFT(PROPERTYSUBTYPE,3)='SEN'
        OR LEFT(PROPERTYSUBTYPE,3)='AGE'
        OR LEFT(PROPERTYSUBTYPE,3)='ASS'
        OR LEFT(PROPERTYSUBTYPE,3)='IND'
        OR LEFT(PROPERTYSUBTYPE,2)='HE'
        OR LEFT(PROPERTYSUBTYPE,2)='HC'

        UPDATE LPLIST_ALL SET PROPERTYSUBTYPE_ASSIGNED ='HEALTHCARE'
        WHERE
        (SELECT MAX(ABS(AMOUNT)) FROM FF F WHERE F.LOANID=LPLIST_ALL.LOANID AND
        F.StmtType='NOR' AND F.DataType='AN' AND
        (F.CATEGORYCODE='100PVTPAY'
        OR F.CATEGORYCODE='110MEDCARE'
        OR F.CATEGORYCODE='120NURSING'
        OR F.CATEGORYCODE='130MEALS'
        OR F.CATEGORYCODE='420ROOMS'
        OR F.CATEGORYCODE='430MEALS'))>1

        --DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
        SELECT CONCAT('STEP#5: LPLIST_ALL RECONCILED; USE PROPTOKEN TABLE TO ASSIGN GEO COORDINATES TO EXISTING EXID_PLID_PRID/RUNTIME(SEC)=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP

        UPDATE LPLIST_ALL SET
        Latitude=NULL,
        Longitude=NULL

        UPDATE LPLIST_ALL SET
        Latitude=(SELECT AVG(Latitude) FROM PROPTOKEN X WHERE X.DATASOURCEID=LPLIST_ALL.EXID_PLID_PRID),
        Longitude=(SELECT AVG(Longitude) FROM PROPTOKEN X WHERE X.DATASOURCEID=LPLIST_ALL.EXID_PLID_PRID)

        UPDATE LPLIST_ALL SET HAS_VALID_LPLIST_ADDRESS=1 WHERE
        PROPERTYNAME IS NOT NULL AND PROPERTYADDRESS IS NOT NULL AND PROPERTYADDRESS IS NOT NULL AND PROPERTYCITY IS NOT NULL AND PROPERTYSTATE IS NOT NULL
        AND PROPERTYNAME<>@DASH AND PROPERTYADDRESS<>@DASH AND PROPERTYADDRESS<>@DASH AND PROPERTYCITY<>@DASH AND PROPERTYSTATE<>@DASH

        DELETE FROM LPLIST_ALL WHERE HAS_VALID_LPLIST_ADDRESS=0
        DELETE FROM LPLIST_ALL WHERE LEN(PROPERTYSTATE)>2

        SELECT CONCAT('STEP#6: SELECT EXID_PLID_PRID WHICH ARE NOT ON PROPTOKEN /RUNTIME(SEC)=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP

        select
        EXID_PLID_PRID,	
        UWDATE,	
        PROPERTYNAME,	
        PROPERTYADDRESS,	
        PROPERTYCITY,	
        PROPERTYSTATE,	
        PROPERTYCOUNTY,	
        PROPERTYZIPCODE,	
        NCREIFMETRO,	
        NCREIFDIVISION,	
        NCREIFREGION,	
        LATITUDE,	
        LONGITUDE
        FROM LPLIST_ALL WHERE Latitude IS NULL or Longitude IS NULL

    END TRY

BEGIN CATCH
    SELECT 
     ERROR_NUMBER() AS ErrorNumber
    ,ERROR_SEVERITY() AS ErrorSeverity
    ,ERROR_STATE() AS ErrorState
    ,ERROR_PROCEDURE() AS ErrorProcedure
    ,ERROR_LINE() AS ErrorLine
    ,ERROR_MESSAGE() AS ErrorMessage
END CATCH

END
