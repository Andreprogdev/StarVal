
-- Francisco : Create LPLIST_AVM table
---DROP PROCEDURE A_4_050722
CREATE PROCEDURE [dbo].[A_4_050722] @DISTRIBUTIONDATE_ACTIVE DATE,@MAXDATE DATE
       
AS

BEGIN

BEGIN TRY
----


DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
SELECT CONCAT('STEP#9:CREATE LPLIST_AVM TABLE; COMPLETE/END/RUNTIME(SEC)=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
---EXECUTE INSERT_LPLIST_AVM @DISTRIBUTIONDATE_ACTIVE,@MAXDATE

TRUNCATE TABLE LPLIST_AVM
INSERT INTO LPLIST_AVM
    (EXID_PLID_PRID_CN_PN,
    EXID_PLID_PRID,
    CLIENTNAME,
    PROPERTYNAME,
    EXATRANSACTIONID,
    PROSPECTUSLOANID,
    LOANID,
    PROPERTYID,
    SAMEPROPERTYID,
    CALC_NARRATIVE,
    HasVAL,
    HasORIG,
    HasUW,
    HasREV,
    HasFF,
    UWDATE,
    UW_VALDATE,
    UW_CAPRATE,
    VAL_CAPRATE,
    UW_VALUATION,
    UW_VAL_PERUNIT,
    UW_REV_ACTUAL_RATIO,
    UW_EXP_ACTUAL_RATIO,
    UW_NOI_ACTUAL_RATIO,
    UW_NCF_ACTUAL_RATIO,
    UW_OCCUP,
    UW_REV_PERUNIT,
    UW_EXP_PERUNIT,
    UW_NOI_PERUNIT,
    UW_NCF_PERUNIT,
    UW_DSCR_NCF_IO,
    UW_DSCR_NCF_AMORT,
    REV_DATE,
    OCCUP,
    REV_PERUNIT,
    NOI_PERUNIT,
    EXP_PCTREV,
    CAPEX_PCTREV,
    VALDATE,
    VALUATION,
    VAL_PERUNIT,
    PROPERTYADDRESS,
    PROPERTYCITY,
    PROPERTYSTATE,
    PROPERTYZIPCODE,
    PROPERTYCOUNTY,
    PROPERTYSUBTYPE,
    PROPERTYSUBTYPE_ASSIGNED,
    NCREIFRegion,
    NCREIFDivision,
    NCREIFMetro,
    Latitude,
    Longitude,
    YearBuilt,
    YearRenov,
    YearBuiltRenov,
    NUMUNITS,
    ELEVATORSYN,
    LOWINCOMEUNITS,
    VERYLOWINCOMEUNITS,
    LOANORIGBALANCE,
    LOANORIGDATE,
    LOANORIGINATOR,
    LOANSPECIALSERVICER,
    LOANMATURITYDATE,
    LOANFIXEDVSFLOAT,
    LOANORIGTERM,
    LOANAMORTTERM,
    LOANIOPERIOD,
    LOANPURPOSE,
    LOANORIGLTV,
    LOANMATURITYLTV,
    LOANPREPAYPROVISION,
    LOANMATURITYBALANCE,
    LOANRATE,
    LOANRATECAP,
    LOANPAYMENTIO,
    LOANPAYMENTAMORT,
    LOANPAYMENTCAP,
    ADVANCE_TOTAL
    )

    SELECT 

    EXID_PLID_PRID,
    EXID_PLID_PRID,
    NULL,
    PROPERTYNAME,
    EXATRANSACTIONID,
    PROSPECTUSLOANID,
    LOANID,
    PROPERTYID,
    SAMEPROPERTYID,
    CASE WHEN ORIG_ERROR=1 THEN '/ORIGDATE=CONTRIDATE-2M/' END,
    HasVAL,
    HasORIG,
    HasUW,
    HasREV,
    HasFF,
    UWDATE,
    UW_VALDATE,
    UW_CAPRATE,
    VAL_CAPRATE,
    UW_VALUATION,
    UW_VAL_PERUNIT,
    UW_REV_ACTUAL_RATIO,
    UW_EXP_ACTUAL_RATIO,
    UW_NOI_ACTUAL_RATIO,
    UW_NCF_ACTUAL_RATIO,
    UW_OCCUP,
    UWREVENUE/(12*CURRENTNUMBEROFUNITSBEDSROOMS),
    UWOPERATINGEXPENSES/(12*CURRENTNUMBEROFUNITSBEDSROOMS),
    UWNOI/(12*CURRENTNUMBEROFUNITSBEDSROOMS),
    UWNCF/(12*CURRENTNUMBEROFUNITSBEDSROOMS),
    UWNCFDSCRIO,
    UWNCFDSCRAMORTIZING,
    CASE WHEN HASUW=1 OR ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270 THEN (SELECT DATELONG FROM DATECONVERT X WHERE X.DATEDATE=CONTRIBUTIONFINANCIALSASOFDATE) END,
    CASE WHEN HASUW=1 OR ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270 THEN PHYSICALOCCUPANCYATCONTRIBUTION END,
    CASE WHEN HASUW=1 OR ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270 THEN REVENUEATCONTRIBUTION/(12*CURRENTNUMBEROFUNITSBEDSROOMS) END,
    CASE WHEN HASUW=1 OR ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270 THEN NOIATCONTRIBUTION/(12*CURRENTNUMBEROFUNITSBEDSROOMS) END,
    CASE WHEN (HASUW=1 OR ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270) AND OPERATINGEXPENSESATCONTRIBUTION<REVENUEATCONTRIBUTION AND OPERATINGEXPENSESATCONTRIBUTION>100 THEN OPERATINGEXPENSESATCONTRIBUTION/REVENUEATCONTRIBUTION END,
    CASE WHEN (HASUW=1 OR ABS(DATEDIFF(D,CONTRIBUTIONFINANCIALSASOFDATE,MOSTRECENTVALUATIONDATE))<270) AND NOIATCONTRIBUTION-NCFATCONTRIBUTION<.5*REVENUEATCONTRIBUTION THEN (NOIATCONTRIBUTION-NCFATCONTRIBUTION)/REVENUEATCONTRIBUTION END,
    MOSTRECENTVALUATIONDATE,
    MOSTRECENTVALUE,
    MOSTRECENTVALUE/CURRENTNUMBEROFUNITSBEDSROOMS,
    PROPERTYADDRESS,
    PROPERTYCITY,
    PROPERTYSTATE,
    PROPERTYZIPCODE,
    PROPERTYCOUNTY,
    PROPERTYSUBTYPE,
    PROPERTYSUBTYPE_ASSIGNED,
    NCREIFRegion,
    NCREIFDivision,
    NCREIFMetro,
    Latitude,
    Longitude,
    YEARBUILT,
    YEARLASTRENOVATED,
    YEARBUILTRENOV,
    CURRENTNUMBEROFUNITSBEDSROOMS,
    ELEVATORSYN,
    LOWINCOMEUNITS,
    VERYLOWINCOMEUNITS,
    TOTALLOANAMOUNTATORIGINATION,
    ORIGINATIONDATE,
    PROPERTYORIGINATOR,
    SPECIALSERVICER,
    MATURITYDATE,
    (CASE WHEN CURRENTINDEXRATE>0 OR LOANRATEINDEX>0  OR RATECAPLIFETIME>0  OR RATECAPSTRIKE>0 THEN 'FLOAT' ELSE 'FIXED' END),
    LOANORIGTERM,
    LOANAMORTTERM,
    LOANIOPER,
    LOANPURPOSE,
    (CASE WHEN TOTALLOANAMOUNTATORIGINATION>0 AND VALUATIONAMOUNTATCONTRIBUTION>0 THEN (TOTALLOANAMOUNTATORIGINATION/VALUATIONAMOUNTATCONTRIBUTION) END),
    MATURITYLTV,
    LOANPREPAYPROVISION,
    SCHEDULEDLOANBALANCEATMATURITY,
    GROSSRATEATCONTRIBUTION,
    RATECAPLIFETIME,
    MONTHLYDEBTSERVICEIO,
    MONTHLYDEBTSERVICEAMORTIZING,
    MONTHLYDEBTSERVICEATCAP,
    TotalPandIAdvanceOutstanding

FROM LPLIST_ALL WHERE CURRENTNUMBEROFUNITSBEDSROOMS>0 and PROPERTYSUBTYPE_ASSIGNED is not null

UPDATE LPLIST_AVM SET MAXDATE=LOANORIGDATE
UPDATE LPLIST_AVM SET MAXDATE=VALDATE WHERE MAXDATE IS NULL OR VALDATE>MAXDATE
UPDATE LPLIST_AVM SET MAXDATE=UWDATE WHERE MAXDATE IS NULL OR UWDATE>MAXDATE
UPDATE LPLIST_AVM SET MAXDATE=UW_VALDATE WHERE MAXDATE IS NULL OR UW_VALDATE>MAXDATE

--DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
SELECT * FROM LPLIST_AVM WHERE MAXDATE IS NULL OR MAXDATE>@MAXDATE ORDER BY MAXDATE DESC
DELETE FROM LPLIST_AVM WHERE MAXDATE IS NULL OR MAXDATE>@MAXDATE

UPDATE LPLIST_AVM SET
DISTRIBUTIONDATE_MOSTRECENT=NULL,DISTRIBUTIONDATE_MOSTRECENT_BAL=NULL,ISDEFEASED=0,ISACTIVE=0,HASFORECAST=0,
SCHED_BEGBAL=NULL,SCHED_ENDBAL=NULL,SCHED_INT=NULL,SCHED_PRIN=NULL,SCHED_PAYMENT=NULL,
DQDATE_MOSTRECENT=NULL,WATCHLISTDATE_MOSTRECENT=NULL,SSTRANSFERDATE_MOSTRECENT=NULL,
SCHED_INT_PCT=NULL,SCHED_PRIN_PCT=NULL,SCHED_PAYMENT_PCT=NULL

UPDATE LPLIST_AVM SET
DISTRIBUTIONDATE_MOSTRECENT=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND X.LOANID=LPLIST_AVM.LOANID),
DISTRIBUTIONDATE_MOSTRECENT_BAL=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND X.LOANID=LPLIST_AVM.LOANID AND X.CurrentEndingSchedBal>1),
ISDEFEASED=CASE WHEN (SELECT COUNT(*) FROM LPER X WHERE X.LOANID=LPLIST_AVM.LOANID AND X.DefeasanceStatus='F')>0 THEN 1 ELSE 0 END

UPDATE LPLIST_AVM SET
SCHED_BEGBAL=(SELECT MAX(CurrentBeginningSchedBal) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND D.DateDate=LPLIST_AVM.DISTRIBUTIONDATE_MOSTRECENT AND X.LOANID=LPLIST_AVM.LOANID),
SCHED_ENDBAL=(SELECT MAX(CurrentEndingSchedBal) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND D.DateDate=LPLIST_AVM.DISTRIBUTIONDATE_MOSTRECENT AND X.LOANID=LPLIST_AVM.LOANID),
SCHED_INT=(SELECT MAX(ScheduledInterestAmount) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND D.DateDate=LPLIST_AVM.DISTRIBUTIONDATE_MOSTRECENT AND X.LOANID=LPLIST_AVM.LOANID),
SCHED_PRIN=(SELECT MAX(ScheduledPrincipalAmount) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND D.DateDate=LPLIST_AVM.DISTRIBUTIONDATE_MOSTRECENT AND X.LOANID=LPLIST_AVM.LOANID),
SCHED_PAYMENT=(SELECT MAX(TotalScheduledPandIDue) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND D.DateDate=LPLIST_AVM.DISTRIBUTIONDATE_MOSTRECENT AND X.LOANID=LPLIST_AVM.LOANID),
DQDATE_MOSTRECENT=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND X.LOANID=LPLIST_AVM.LOANID AND X.CurrentEndingSchedBal>0 AND X.DefeasanceStatus<>'F' AND (X.PaymentStatusofLoanfkaStatusofLoan='5' OR X.PaymentStatusofLoanfkaStatusofLoan='4' OR X.PaymentStatusofLoanfkaStatusofLoan='3' OR X.PaymentStatusofLoanfkaStatusofLoan='2')),
WATCHLISTDATE_MOSTRECENT=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DateAddedToServWatchlist AND X.LOANID=LPLIST_AVM.LOANID AND X.CurrentEndingSchedBal>0 AND X.DefeasanceStatus<>'F'),
SSTRANSFERDATE_MOSTRECENT=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.MostRecentSpecialServicerTransferDate AND  X.LOANID=LPLIST_AVM.LOANID AND X.CurrentEndingSchedBal>0 AND X.DefeasanceStatus<>'F'),
PREPAYMENTDATE=(SELECT MAX(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.LiquidationPrepaymentDate AND  X.LOANID=LPLIST_AVM.LOANID AND X.DefeasanceStatus<>'F'),
DEFEASANCEDATE=(SELECT MIN(DateDate) FROM DATECONVERT D,LPER X WHERE D.Datelong=X.DistributionDate AND X.LOANID=LPLIST_AVM.LOANID AND X.DefeasanceStatus='F')

UPDATE LPLIST_AVM SET ISACTIVE=1 WHERE DISTRIBUTIONDATE_MOSTRECENT=DISTRIBUTIONDATE_MOSTRECENT_BAL AND SCHED_ENDBAL>100 AND DISTRIBUTIONDATE_MOSTRECENT>@DISTRIBUTIONDATE_ACTIVE
UPDATE LPLIST_AVM SET
NUM_CURRLOANS=(SELECT COUNT(DISTINCT X1.LOANID) FROM LPLIST_AVM X1 WHERE X1.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X1.ISACTIVE=1),
NUM_CURRPROPS=(SELECT COUNT(DISTINCT X1.SAMEPROPERTYID) FROM LPLIST_AVM X1 WHERE X1.LOANID=LPLIST_AVM.LOANID)

UPDATE LPLIST_AVM SET LOANORIGBALANCE=NULL WHERE LOANORIGBALANCE<SCHED_BEGBAL-1000
UPDATE LPLIST_AVM SET SCHED_INT=SCHED_PAYMENT,SCHED_PRIN=0 WHERE SCHED_PRIN IS NULL AND SCHED_PAYMENT>0 
UPDATE LPLIST_AVM SET SCHED_PAYMENT=SCHED_INT,SCHED_PRIN=0 WHERE SCHED_PRIN IS NULL AND SCHED_INT>0 
UPDATE LPLIST_AVM SET ADVANCE_TOTAL=0 WHERE ADVANCE_TOTAL IS NULL
UPDATE LPLIST_AVM SET 
SCHED_INT_PCT=(SCHED_INT/SCHED_BEGBAL),
SCHED_PRIN_PCT=(SCHED_PRIN/SCHED_BEGBAL),
SCHED_PAYMENT_PCT=(SCHED_PAYMENT/SCHED_BEGBAL),
ADVANCE_TOTAL_PCT=(ADVANCE_TOTAL/SCHED_BEGBAL) 
WHERE SCHED_BEGBAL>0 

UPDATE LPLIST_AVM SET
LOANPAYMENTIO=LOANRATE*LOANORIGBALANCE/12
WHERE (LOANPAYMENTIO IS NULL OR LOANPAYMENTIO=0)

UPDATE LPLIST_AVM SET
LOANRATECAP=(LOANPAYMENTCAP/LOANPAYMENTIO)*LOANRATE
WHERE LOANFIXEDVSFLOAT='FLOAT' AND (LOANRATECAP IS NULL OR LOANRATECAP=0) AND LOANPAYMENTIO>0

UPDATE LPLIST_AVM SET
LOANFULLAMPCT=12*LOANPAYMENTAMORT/LOANORIGBALANCE
WHERE LOANORIGBALANCE>0

UPDATE LPLIST_AVM SET
UW_DSCR_NCF_AMORT=NumUnits*UW_NCF_PERUNIT
	/(SELECT SUM(LOANPAYMENTAMORT) FROM LPLIST_AVM X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.LOANORIGDATE<=LPLIST_AVM.LOANORIGDATE AND X.ISACTIVE=1) 
WHERE (SELECT SUM(LOANPAYMENTAMORT) FROM LPLIST_AVM X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.LOANORIGDATE<=LPLIST_AVM.LOANORIGDATE AND X.ISACTIVE=1)>100
AND NUM_CURRPROPS=1
AND UW_DSCR_NCF_AMORT IS NULL

UPDATE LPLIST_AVM SET
UW_DSCR_NCF_AMORT=(SELECT SUM(NumUnits*UW_NCF_PERUNIT) FROM LPLIST_AVM X WHERE X.EXATRANSACTIONID=LPLIST_AVM.EXATRANSACTIONID AND X.PROSPECTUSLOANID=LPLIST_AVM.PROSPECTUSLOANID)
	/LOANPAYMENTAMORT
WHERE LOANPAYMENTAMORT>100
AND NUM_CURRLOANS=1
AND NUM_CURRPROPS>1
AND UW_DSCR_NCF_AMORT IS NULL

UPDATE LPLIST_AVM SET
UW_DSCR_NCF_IO=NumUnits*UW_NCF_PERUNIT
	/(SELECT SUM(LOANPAYMENTIO) FROM LPLIST_AVM X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.LOANORIGDATE<=LPLIST_AVM.LOANORIGDATE AND X.ISACTIVE=1) 
WHERE (SELECT SUM(LOANPAYMENTIO) FROM LPLIST_AVM X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.LOANORIGDATE<=LPLIST_AVM.LOANORIGDATE AND X.ISACTIVE=1)>100
AND NUM_CURRPROPS=1
AND UW_DSCR_NCF_IO IS NULL

UPDATE LPLIST_AVM SET
UW_DSCR_NCF_IO=(SELECT SUM(NumUnits*UW_NCF_PERUNIT) FROM LPLIST_AVM X WHERE X.EXATRANSACTIONID=LPLIST_AVM.EXATRANSACTIONID AND X.PROSPECTUSLOANID=LPLIST_AVM.PROSPECTUSLOANID)
	/LOANPAYMENTIO
WHERE LOANPAYMENTIO>100
AND NUM_CURRLOANS=1
AND NUM_CURRPROPS>1
AND UW_DSCR_NCF_IO IS NULL

UPDATE LPLIST_AVM SET
UW_DSCR_NCF_CAP=NumUnits*UW_NCF_PERUNIT
	/(SELECT SUM(LOANPAYMENTCAP) FROM LPLIST_AVM X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.LOANORIGDATE<=LPLIST_AVM.LOANORIGDATE AND X.ISACTIVE=1) 
WHERE (SELECT SUM(LOANPAYMENTCAP) FROM LPLIST_AVM X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.LOANORIGDATE<=LPLIST_AVM.LOANORIGDATE AND X.ISACTIVE=1)>100
AND NUM_CURRPROPS=1
AND UW_DSCR_NCF_CAP IS NULL

UPDATE LPLIST_AVM SET
UW_DSCR_NCF_CAP=(SELECT SUM(NumUnits*UW_NCF_PERUNIT) FROM LPLIST_AVM X WHERE X.EXATRANSACTIONID=LPLIST_AVM.EXATRANSACTIONID AND X.PROSPECTUSLOANID=LPLIST_AVM.PROSPECTUSLOANID)
	/LOANPAYMENTCAP
WHERE LOANPAYMENTCAP>100
AND NUM_CURRLOANS=1
AND NUM_CURRPROPS>1
AND UW_DSCR_NCF_CAP IS NULL

UPDATE LPLIST_AVM SET
LOANPAYMENTAMORT=NULL,
LOANPAYMENTIO=NULL,
LOANPAYMENTCAP=NULL
WHERE UW_DSCR_NCF_AMORT<1 OR UW_DSCR_NCF_AMORT>5

-----------------

UPDATE LPLIST_AVM SET
CENSUSYEAR=(SELECT MAX(CENSUSYEAR) FROM CENSUSDATA_USED C WHERE C.CENSUSYEAR<=YEAR(LPLIST_AVM.MAXDATE) AND C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.PopulationPerSqMile>0),
HPIYEAR=(SELECT MAX(STATEMENTYEAR) FROM HPIDATA X WHERE X.STATEMENTYEAR<=YEAR(MAXDATE))

UPDATE LPLIST_AVM SET
CENSUSYEAR=(SELECT MIN(CENSUSYEAR) FROM CENSUSDATA_USED C WHERE C.CENSUSYEAR>=YEAR(LPLIST_AVM.MAXDATE) AND C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.PopulationPerSqMile>0)
WHERE CENSUSYEAR IS NULL

UPDATE LPLIST_AVM SET
PopulationPerSqMile=(SELECT AVG(PopulationPerSqMile) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
MedianHHInc=(SELECT AVG(MedianHHInc) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
MedianHomeVal=(SELECT AVG(MedianHomeVal) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
Median_Rent=(SELECT AVG(Median_Rent) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
MedianAge=(SELECT AVG(MedianAge) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
Median_Owner_Costs=(SELECT AVG(Median_Owner_Costs) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
RenterPCT=(SELECT AVG(RenterPCT) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
CashRentOver30PCT=(SELECT AVG(CashRentOver30PCT) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
BachelorsOrMorePCT=(SELECT AVG(BachelorsOrMorePCT) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
UnemploymentPCT=(SELECT AVG(UnemploymentPCT) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
MngtFinancePCT=(SELECT AVG(MngtFinancePCT) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear), 
MovedIn2010orLaterPCT=(SELECT AVG(MovedIn2010orLaterPCT) FROM CENSUSDATA_USED C WHERE C.EXID_PLID_PRID=LPLIST_AVM.EXID_PLID_PRID AND C.CensusYear=LPLIST_AVM.CensusYear)

UPDATE LPLIST_AVM SET HPI_1YRCH=NULL
UPDATE LPLIST_AVM SET 
HPI_1YRCH=(SELECT AVG(HPI_1YRCH) FROM HPIDATA X WHERE X.STATEMENTYEAR=HPIYEAR AND X.ZIPCODE=LPLIST_AVM.PROPERTYZIPCODE)
WHERE PROPERTYZIPCODE IS NOT NULL

UPDATE LPLIST_AVM SET 
HPI_1YRCH=(SELECT AVG(HPI_1YRCH) FROM LPLIST_AVM X WHERE X.HPIYEAR=LPLIST_AVM.HPIYEAR AND X.NCREIFMetro=LPLIST_AVM.NCREIFMetro)
WHERE HPI_1YRCH IS NULL

UPDATE LPLIST_AVM SET 
HPI_1YRCH=0
WHERE HPI_1YRCH IS NULL

UPDATE LPLIST_AVM SET HPI_METRO_1YRCH=(SELECT AVG(HPI_1YRCH) FROM LPLIST_AVM X WHERE X.HPIYEAR=LPLIST_AVM.HPIYEAR AND X.NCREIFMetro=LPLIST_AVM.NCREIFMetro)
UPDATE LPLIST_AVM SET HPI_METRO_1YRCH=(SELECT AVG(HPI_1YRCH) FROM LPLIST_AVM X WHERE X.HPIYEAR=LPLIST_AVM.HPIYEAR AND X.NCREIFDivision=LPLIST_AVM.NCREIFDivision) WHERE HPI_METRO_1YRCH IS NULL
UPDATE LPLIST_AVM SET HPI_METRO_1YRCH=(SELECT AVG(HPI_1YRCH) FROM LPLIST_AVM X WHERE X.HPIYEAR=LPLIST_AVM.HPIYEAR AND X.NCREIFRegion=LPLIST_AVM.NCREIFRegion) WHERE HPI_METRO_1YRCH IS NULL
UPDATE LPLIST_AVM SET HPI_METRO_1YRCH=(SELECT AVG(HPI_1YRCH) FROM LPLIST_AVM X WHERE X.HPIYEAR=LPLIST_AVM.HPIYEAR) WHERE HPI_METRO_1YRCH IS NULL
UPDATE LPLIST_AVM SET HPI_METRO_1YRCH=0 WHERE HPI_METRO_1YRCH IS NULL
--6 minutes

UPDATE LPLIST_AVM SET 
RATEAVGYEAR_TRSY1M=(SELECT AVG(TRSY1M) FROM RATEDATA WHERE DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)>=0 AND DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)<=12),
RATEAVGYEAR_TRSY10Y=(SELECT AVG(TRSY10Y) FROM RATEDATA WHERE DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)>=0 AND DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)<=12),
RATEAVG3MORIG_TRSY1M=(SELECT AVG(TRSY1M) FROM RATEDATA WHERE  DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)>=0 AND DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)<=3),
RATEAVG3MORIG_TRSY10Y=(SELECT AVG(TRSY10Y) FROM RATEDATA WHERE  DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)>=0 AND DATEDIFF(M,CLOSEDATE,LPLIST_AVM.UWDATE)<=3)

UPDATE LPLIST_AVM SET
HUD_PROJECT_NUMBER=(SELECT MAX(HUD_PROJECT_NUMBER) FROM HUD_PROJECT_LOANS X WHERE X.EXID_PLID_PRID_MATCH=LPLIST_AVM.EXID_PLID_PRID),
SEC8_PROPERTYID=(SELECT MAX(property_id) FROM HUD_SEC8_PROPERTIES X WHERE X.EXID_PLID_PRID_MATCH=LPLIST_AVM.EXID_PLID_PRID)

UPDATE LPLIST_AVM SET 
RevenuePctMedianIncome=CASE WHEN 12*UW_REV_PERUNIT<MedianHHInc THEN 12*UW_REV_PERUNIT/MedianHHInc END

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=NULL

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=
CASE WHEN RevenuePctMedianIncome<.12 THEN 'AFFORDABLE(40% AMI)'
	ELSE CASE WHEN RevenuePctMedianIncome<.15 THEN 'AFFORDABLE(50% AMI)'
			ELSE CASE WHEN RevenuePctMedianIncome<.18 THEN 'AFFORDABLE(60% AMI)'
				ELSE CASE WHEN RevenuePctMedianIncome<.21 THEN 'AFFORDABLE(70% AMI)'
					ELSE CASE WHEN RevenuePctMedianIncome<.24 THEN 'AFFORDABLE(80% AMI)'
END END END END END

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=CASE WHEN LOWINCOMESTATUS IS NULL THEN (CASE WHEN HUD_PROJECT_NUMBER>0 THEN 'AFFORDABLE:HUD Loan' END) 
	ELSE CONCAT(LOWINCOMESTATUS,(CASE WHEN HUD_PROJECT_NUMBER>0 THEN ', HUD Loan' END)) END

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=CASE WHEN LOWINCOMESTATUS IS NULL THEN (CASE WHEN SEC8_PROPERTYID>0 THEN 'AFFORDABLE:Section 8' END) 
	ELSE CONCAT(LOWINCOMESTATUS,(CASE WHEN SEC8_PROPERTYID>0 THEN ', Section 8' END)) END

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=CASE WHEN LOWINCOMESTATUS IS NULL THEN (CASE WHEN LOWINCOMEUNITS>.5*NUMUNITS and (VERYLOWINCOMEUNITS IS NULL OR VERYLOWINCOMEUNITS<LOWINCOMEUNITS) THEN CONCAT('AFFORDABLE: ',CAST((100*LOWINCOMEUNITS)/NUMUNITS AS INT),'% Low Income Units') END)
	ELSE CONCAT(LOWINCOMESTATUS,(CASE WHEN LOWINCOMEUNITS>.1*NUMUNITS and (VERYLOWINCOMEUNITS IS NULL OR VERYLOWINCOMEUNITS<LOWINCOMEUNITS) THEN CONCAT(', ',CAST((100*LOWINCOMEUNITS)/NUMUNITS AS INT),'% Low Income Units') END)) END

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=CASE WHEN LOWINCOMESTATUS IS NULL THEN (CASE WHEN VERYLOWINCOMEUNITS>.1*NUMUNITS THEN CONCAT('AFFORDABLE: ',CAST((100*VERYLOWINCOMEUNITS)/NUMUNITS AS INT),'% Very Low Income Units') END)
	ELSE CONCAT(LOWINCOMESTATUS,(CASE WHEN VERYLOWINCOMEUNITS>.05*NUMUNITS THEN CONCAT(', ',CAST((100*VERYLOWINCOMEUNITS)/NUMUNITS AS INT),'% Very Low Income Units') END)) END

UPDATE LPLIST_AVM SET 
LOWINCOMESTATUS=CASE WHEN RevenuePctMedianIncome>0 THEN 'MARKETRATE' ELSE 'N/A' END
WHERE LOWINCOMESTATUS IS NULL

UPDATE LPLIST_AVM SET
LOWINCOMESTATUS=CONCAT(LOWINCOMESTATUS,', RevPctInc=',
	CASE WHEN RevenuePctMedianIncome>0 THEN CONCAT(CAST(100*RevenuePctMedianIncome AS INT),'%')
		ELSE 'N/A' END)

UPDATE LPLIST_AVM SET PROPERTY_NAME_AND_ATTRIBUTES=CONCAT(PROPERTYNAME,', ',PROPERTYADDRESS,', ',PROPERTYCITY,', ',PROPERTYSTATE,', ',
		CASE WHEN PROPERTYSUBTYPE_ASSIGNED='GARDEN(SB)' THEN 'GARDEN' ELSE CASE WHEN PROPERTYSUBTYPE_ASSIGNED='MIRISE(SB)' THEN 'MIDRISE' ELSE PROPERTYSUBTYPE_ASSIGNED END END,
		' Subtype, ',NUMUNITS,' Units, ', YearBuilt,' Built',CASE WHEN YearRenov>YearBuilt THEN CONCAT(', ',YearRenov,' Renovated') END,CASE WHEN LOWINCOMESTATUS IS NOT NULL THEN CONCAT(',',LOWINCOMESTATUS) END)

--DECLARE @TIMESTAMP_LAST DATETIME2(7) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
SELECT CONCAT('STEP#11:LPLIST_AVM ASSIGNED CENSUS,AFFORDABILITY/ END/RUNTIME(SEC)=', DATEDIFF(S,@TIMESTAMP_LAST,CURRENT_TIMESTAMP)) SELECT @TIMESTAMP_LAST=CURRENT_TIMESTAMP
SELECT * FROM LPLIST_AVM ORDER BY MAXDATE DESC

-----------------UWDATE,REV_DATE=CONTRIBUTION FINANCIALS,USED FOR AVM CALCULATIONS
UPDATE LPLIST_AVM SET HASREV=0
UPDATE LPLIST_AVM SET HASREV=1 WHERE NOI_PERUNIT>0 AND REV_DATE IS NOT NULL

UPDATE LPLIST_AVM SET
HASREV=1,
REV_DATE=(SELECT MAX(DATELONG) FROM DATECONVERT D,PROP_DISTINCT_CALCS X WHERE D.DateDate=X.STATEMENTENDDATE_REV AND X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
OCCUP=(SELECT OCCUP FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
REV_PERUNIT=(SELECT REV_PERUNIT FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
NOI_PERUNIT=(SELECT NOI_PERUNIT FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
EXP_PCTREV=(SELECT EXP_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
CAPEX_PCTREV=(SELECT CAPEX_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
OCCUP_1YRCH=(SELECT OCCUP_1YRCH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
REV_1YR_PCT_CH=(SELECT REV_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
EXP_1YR_PCT_CH=(SELECT EXP_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
NOI_1YR_PCT_CH=(SELECT NOI_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93)
WHERE HASREV=0
AND (SELECT COUNT(*) FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93)>0

UPDATE LPLIST_AVM SET
HASREV=1,
REV_DATE=(SELECT MAX(DATELONG) FROM DATECONVERT D,PROP_DISTINCT_CALCS X WHERE D.DateDate=X.STATEMENTENDDATE_REV AND X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
OCCUP=(SELECT OCCUP FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
REV_PERUNIT=(SELECT REV_PERUNIT FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
NOI_PERUNIT=(SELECT NOI_PERUNIT FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
EXP_PCTREV=(SELECT EXP_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
CAPEX_PCTREV=(SELECT CAPEX_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
OCCUP_1YRCH=(SELECT OCCUP_1YRCH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
REV_1YR_PCT_CH=(SELECT REV_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
EXP_1YR_PCT_CH=(SELECT EXP_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
NOI_1YR_PCT_CH=(SELECT NOI_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280)
WHERE HASREV=0
AND (SELECT COUNT(*) FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280)>0

UPDATE LPLIST_AVM SET HasREV_1YRCH=0
UPDATE LPLIST_AVM SET HasREV_1YRCH=1 WHERE REV_1YR_PCT_CH IS NOT NULL
UPDATE LPLIST_AVM SET
HasREV_1YRCH=1,
OCCUP_1YRCH=(SELECT OCCUP_1YRCH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
REV_1YR_PCT_CH=(SELECT REV_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
EXP_1YR_PCT_CH=(SELECT EXP_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
NOI_1YR_PCT_CH=(SELECT NOI_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93)
WHERE HasREV_1YRCH=0
AND (SELECT COUNT(*) FROM PROP_DISTINCT_CALCS X WHERE ABS(REV_1YR_PCT_CH)>0 AND X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93)>0

UPDATE LPLIST_AVM SET
HasREV_1YRCH=1,
OCCUP_1YRCH=(SELECT OCCUP_1YRCH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
REV_1YR_PCT_CH=(SELECT REV_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
EXP_1YR_PCT_CH=(SELECT EXP_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
NOI_1YR_PCT_CH=(SELECT NOI_1YR_PCT_CH FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280)
WHERE HasREV_1YRCH=0
AND (SELECT COUNT(*) FROM PROP_DISTINCT_CALCS X WHERE ABS(REV_1YR_PCT_CH)>0 AND X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280)>0

UPDATE LPLIST_AVM SET OCCUP_1YRCH=0 WHERE OCCUP_1YRCH IS NULL AND REV_1YR_PCT_CH IS NOT NULL
UPDATE LPLIST_AVM SET NOI_1YR_PCT_CH=(REV_PERUNIT*REV_1YR_PCT_CH-REV_PERUNIT*EXP_PCTREV*EXP_1YR_PCT_CH)/(REV_PERUNIT-REV_PERUNIT*EXP_PCTREV) WHERE NOI_1YR_PCT_CH IS NULL AND REV_1YR_PCT_CH IS NOT NULL AND (REV_PERUNIT-REV_PERUNIT*EXP_PCTREV)>0
UPDATE LPLIST_AVM SET EXP_1YR_PCT_CH=CASE WHEN EXP_1YR_PCT_CH<-.5 THEN -.5 ELSE CASE WHEN EXP_1YR_PCT_CH>.5 THEN .5 ELSE EXP_1YR_PCT_CH END END
UPDATE LPLIST_AVM SET REV_1YR_PCT_CH=CASE WHEN REV_1YR_PCT_CH<-.5 THEN -.5 ELSE CASE WHEN REV_1YR_PCT_CH>.5 THEN .5 ELSE REV_1YR_PCT_CH END END
UPDATE LPLIST_AVM SET NOI_1YR_PCT_CH=CASE WHEN NOI_1YR_PCT_CH<-.75 THEN -.75 ELSE CASE WHEN NOI_1YR_PCT_CH>.75 THEN .75 ELSE NOI_1YR_PCT_CH END END

UPDATE LPLIST_AVM SET HASFF=0
UPDATE LPLIST_AVM SET HASFF=1 WHERE RETAXES_PCTREV>0 AND FF_DATE IS NOT NULL

UPDATE LPLIST_AVM SET
HASFF=1,
FF_DATE=(SELECT MAX(DATELONG) FROM DATECONVERT D,PROP_DISTINCT_CALCS X WHERE D.DateDate=X.STATEMENTENDDATE AND X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<93),
RETAXES_PCTREV=(SELECT RETAXES_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93),
PROPINS_PCTREV=(SELECT PROPINS_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93),
UTILITI_PCTREV=(SELECT UTILITI_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93),
REPAIRS_PCTREV=(SELECT REPAIRS_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93),
MANAGEM_PCTREV=(SELECT MANAGEM_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93),
PAYROLL_PCTREV=(SELECT PAYROLL_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93)

WHERE HASFF=0
AND (SELECT COUNT(*) FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE) AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<93)>0

UPDATE LPLIST_AVM SET
HASFF=1,
FF_DATE=(SELECT MAX(DATELONG) FROM DATECONVERT D,PROP_DISTINCT_CALCS X WHERE D.DateDate=X.STATEMENTENDDATE AND X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE_REV))<280),
RETAXES_PCTREV=(SELECT RETAXES_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280),
PROPINS_PCTREV=(SELECT PROPINS_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280),
UTILITI_PCTREV=(SELECT UTILITI_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280),
REPAIRS_PCTREV=(SELECT REPAIRS_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280),
MANAGEM_PCTREV=(SELECT MANAGEM_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280),
PAYROLL_PCTREV=(SELECT PAYROLL_PCTREV FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280)

WHERE HASFF=0
AND (SELECT COUNT(*) FROM PROP_DISTINCT_CALCS X WHERE X.SAMEPROPERTYID=LPLIST_AVM.SAMEPROPERTYID AND X.STATEMENTYEAR=YEAR(LPLIST_AVM.UWDATE)-1 AND ABS(DATEDIFF(D,LPLIST_AVM.UWDATE,STATEMENTENDDATE))<280)>0

UPDATE LPLIST_AVM SET HasREV=1 WHERE NOI_PERUNIT>0
UPDATE LPLIST_AVM SET HasFF=1 WHERE REPAIRS_PCTREV>0
UPDATE LPLIST_AVM SET HasREV_1YRCH=1 WHERE REV_1YR_PCT_CH IS NOT NULL

UPDATE LPLIST_AVM SET MAXDATE=(SELECT DATEDATE FROM DATECONVERT X WHERE X.DateLong=REV_DATE) WHERE MAXDATE IS NULL OR (SELECT DATEDATE FROM DATECONVERT X WHERE X.DateLong=REV_DATE)>MAXDATE
UPDATE LPLIST_AVM SET MAXDATE=(SELECT DATEDATE FROM DATECONVERT X WHERE X.DateLong=FF_DATE) WHERE MAXDATE IS NULL OR (SELECT DATEDATE FROM DATECONVERT X WHERE X.DateLong=FF_DATE)>MAXDATE

DELETE FROM LPLIST_AVM WHERE MAXDATE IS NULL OR MAXDATE>@MAXDATE


 UPDATE LPLIST_AVM SET 
DATANUM=CASE WHEN 
--MODEL 3
ABS(REV_1YR_PCT_CH)<.5
AND ABS(EXP_1YR_PCT_CH)<.5
AND ABS(NOI_1YR_PCT_CH)<1
AND YearBuiltRenov IS NOT NULL
AND PopulationPerSqMile IS NOT NULL
AND MedianHHInc IS NOT NULL
AND MedianHomeVal IS NOT NULL
AND Median_Rent IS NOT NULL
AND MedianAge IS NOT NULL
AND Median_Owner_Costs IS NOT NULL
AND RenterPCT IS NOT NULL
AND CashRentOver30PCT IS NOT NULL
AND BachelorsOrMorePCT IS NOT NULL
AND UnemploymentPCT IS NOT NULL
AND MngtFinancePCT IS NOT NULL
AND MovedIn2010orLaterPCT IS NOT NULL
AND HPI_1YRCH IS NOT NULL
AND OCCUP IS NOT NULL
AND REV_PERUNIT IS NOT NULL
AND EXP_PCTREV IS NOT NULL
AND CAPEX_PCTREV IS NOT NULL
AND OCCUP_1YRCH IS NOT NULL
AND REV_1YR_PCT_CH IS NOT NULL
AND EXP_1YR_PCT_CH IS NOT NULL
AND YearBuilt IS NOT NULL
AND NumUnits IS NOT NULL
AND RevenuePctMedianIncome IS NOT NULL
AND NOI_1YR_PCT_CH IS NOT NULL
AND HPI_METRO_1YRCH IS NOT NULL
AND RETAXES_PCTREV IS NOT NULL
AND PROPINS_PCTREV IS NOT NULL
AND UTILITI_PCTREV IS NOT NULL
AND REPAIRS_PCTREV IS NOT NULL
AND MANAGEM_PCTREV IS NOT NULL
AND PAYROLL_PCTREV IS NOT NULL
THEN 3

ELSE CASE WHEN
--MODEL 2
YearBuiltRenov IS NOT NULL
AND PopulationPerSqMile IS NOT NULL
AND MedianHHInc IS NOT NULL
AND MedianHomeVal IS NOT NULL
AND Median_Rent IS NOT NULL
AND MedianAge IS NOT NULL
AND Median_Owner_Costs IS NOT NULL
AND RenterPCT IS NOT NULL
AND CashRentOver30PCT IS NOT NULL
AND BachelorsOrMorePCT IS NOT NULL
AND UnemploymentPCT IS NOT NULL
AND MngtFinancePCT IS NOT NULL
AND MovedIn2010orLaterPCT IS NOT NULL
AND HPI_1YRCH IS NOT NULL
AND REV_PERUNIT IS NOT NULL
AND EXP_PCTREV IS NOT NULL
AND CAPEX_PCTREV IS NOT NULL
AND NumUnits IS NOT NULL
AND RevenuePctMedianIncome IS NOT NULL
AND HPI_METRO_1YRCH IS NOT NULL
AND RETAXES_PCTREV IS NOT NULL
AND PROPINS_PCTREV IS NOT NULL
AND UTILITI_PCTREV IS NOT NULL
AND REPAIRS_PCTREV IS NOT NULL
AND MANAGEM_PCTREV IS NOT NULL
AND PAYROLL_PCTREV IS NOT NULL
THEN 2

ELSE CASE WHEN 
--MODEL 1
YearBuiltRenov IS NOT NULL
AND PopulationPerSqMile IS NOT NULL
AND MedianHHInc IS NOT NULL
AND MedianHomeVal IS NOT NULL
AND Median_Rent IS NOT NULL
AND MedianAge IS NOT NULL
AND Median_Owner_Costs IS NOT NULL
AND RenterPCT IS NOT NULL
AND CashRentOver30PCT IS NOT NULL
AND BachelorsOrMorePCT IS NOT NULL
AND UnemploymentPCT IS NOT NULL
AND MngtFinancePCT IS NOT NULL
AND MovedIn2010orLaterPCT IS NOT NULL
AND HPI_1YRCH IS NOT NULL
AND REV_PERUNIT IS NOT NULL
AND EXP_PCTREV IS NOT NULL
AND CAPEX_PCTREV IS NOT NULL
AND NumUnits IS NOT NULL
AND RevenuePctMedianIncome IS NOT NULL
AND HPI_METRO_1YRCH IS NOT NULL
THEN 1

ELSE CASE WHEN
--MODEL 0
YearBuiltRenov IS NOT NULL
AND PopulationPerSqMile IS NOT NULL
AND MedianHHInc IS NOT NULL
AND MedianHomeVal IS NOT NULL
AND Median_Rent IS NOT NULL
AND MedianAge IS NOT NULL
AND Median_Owner_Costs IS NOT NULL
AND RenterPCT IS NOT NULL
AND CashRentOver30PCT IS NOT NULL
AND BachelorsOrMorePCT IS NOT NULL
AND UnemploymentPCT IS NOT NULL
AND MngtFinancePCT IS NOT NULL
AND MovedIn2010orLaterPCT IS NOT NULL
AND HPI_1YRCH IS NOT NULL
AND NumUnits IS NOT NULL
AND HPI_METRO_1YRCH IS NOT NULL

THEN 0
ELSE -99 END END END END

--PROPERTYSUBTYPE_ASSIGNED

END TRY

BEGIN CATCH
    SELECT 
     ERROR_NUMBER() AS ErrorNumber
    ,ERROR_SEVERITY() AS ErrorSeverity
    ,ERROR_STATE() AS ErrorState
    ,ERROR_PROCEDURE() AS ErrorProcedure
    ,ERROR_LINE() AS ErrorLine
    ,ERROR_MESSAGE() AS ErrorMessage
END CATCH

END
